// Note: Bootstrap stops at --base0F

:root,
[data-bs-theme="light"] {
  --base00: #{$white};
  --base01: #{$gray-700};
  --base02: #{$red-500};
  --base03: #{$blue-600};
  --base04: #{$green-700};
  --base05: #{$cyan-800};
  --base06: #{$gray-800};
  --base07: #{$pink-200};
  --base08: #{$green-900};
  --base09: #{$green-200};
  --base0A: #{$blue-900};
  --base0B: #{$cyan-700};
  --base0C: #{$orange-700};
  --base0D: #{$purple-700};
  --base0E: #{$teal-700};
  --base0F: #{$black};
  --base10: #{$gray-400};
  --base11: #{$yellow-800};
  --base12: #{$cyan-900};
  --base13: #{$pink-800};
}

// Right now, values are from Bootstrap from `--base00` to `--baseOF` and the 4 remaining one are copied from Boosted's light mode
@include color-mode(dark, true) {
  --base00: #{$gray-950};
  --base01: #{$gray-500};
  --base02: #{$teal-300};
  --base03: #{$cyan-300};
  --base04: #{$yellow-300};
  --base05: #{$cyan-400};
  --base06: #{$gray-400};
  --base07: #{$pink-800};
  --base08: #{$cyan-300};
  --base09: #{$green-800};
  --base0A: #{$blue-200};
  --base0B: #{$cyan-500};
  --base0C: #{$orange-300};
  --base0D: #{$purple-300};
  --base0E: #{$teal-400};
  --base0F: #{$white};
  --base10: #{$gray-700};
  --base11: #{$green-400};
  --base12: #{$cyan-500};
  --base13: #{$pink-500};
}

// From there this file was generated by running `hugo gen chromastyles > chroma.css` and modified in order to respect formatting rules

/* Background */ // .bg { background-color: #f0f0f0; }

/* PreWrapper */ .chroma {
  background-color: var(--base00);

  .language-bash,
  .language-sh {
    .line::before {
      color: var(--base12);
      content: "$ ";
      user-select: none;
    }
  }

  .language-powershell::before {
    color: var(--base12);
    content: "PM> ";
    user-select: none;
  }
}

/* Other */ // .chroma .x {  }

/* Error */ .chroma .err { color: var(--base02); }

/* CodeLine */ // .chroma .cl {  }

/* LineTableTD */ // .chroma .lntd { padding: 0; margin: 0; vertical-align: top; border: 0; }

/* LineTable */ // .chroma .lntable { padding: 0; margin: 0; border-spacing: 0; border: 0; }

/* LineHighlight */ // .chroma .hl { background-color: #ffc; }

/* LineNumbersTable */ // .chroma .lnt { padding: 0 .4em; margin-right: .4em; color: #7f7f7f; white-space: pre; user-select: none; }

/* LineNumbers */ // .chroma .ln { padding: 0 .4em; margin-right: .4em; color: #7f7f7f; white-space: pre; user-select: none; }

/* Line */ // .chroma .line { display: flex; }
/* Keyword */ .chroma .k {
  font-weight: $font-weight-bold;
  color: var(--base03);
}
/* Keyword */ .chroma .language-scss .k,
.chroma .language-js .k { font-weight: $font-weight-bold; }
/* KeywordConstant */ .chroma .kc { color: var(--base0B); }
/* KeywordDeclaration */ .chroma .kd {
  font-weight: $font-weight-bold;
  color: var(--base04);
}
/* KeywordNamespace */ .chroma .kn { color: var(--base0C); }
/* KeywordPseudo */ .chroma .kp { color: var(--base0C); }
/* KeywordReserved */ .chroma .kr { color: var(--base0C); }
/* KeywordType */ .chroma .kt { color: var(--base0B); }
/* Name */ .chroma .n { color: var(--base04); }
/* NameAttribute */ .chroma .na { color: var(--base04); }
/* NameBuiltin */ .chroma .nb { color: var(--base04); }

/* NameBuiltinPseudo */ // .chroma .bp {  }
/* NameClass */ .chroma .nc { color: var(--base03); }
/* NameClass */ .chroma [class*="css"] .nc { font-weight: $font-weight-bold; }
/* NameConstant */ .chroma .no { color: var(--base04); }
/* NameDecorator */ .chroma .nd { color: var(--base0D); }
/* NameEntity */ .chroma .ni { color: var(--base06); }
/* NameException */ .chroma .ne { color: var(--base02); }
/* NameFunction */ .chroma .nf { color: var(--base0E); }

/* NameFunctionMagic */ // .chroma .fm {  }
/* NameLabel */ .chroma .nl { color: var(--base0D); }
/* NameNamespace */ .chroma .nn { color: var(--base02); }
/* NameOther */ .chroma .nx { color: var(--base0D); }

/* NameProperty */ // .chroma .py {  }
/* NameTag */ .chroma .nt { color: var(--base03); }
/* NameTag */ .chroma .language-html .nt,
.chroma .language-css .nt { font-weight: $font-weight-bold; }
/* NameVariable */ .chroma .nv { color: var(--base02); }

/* NameVariableClass */ // .chroma .vc {  }

/* NameVariableGlobal */ // .chroma .vg {  }

/* NameVariableInstance */ // .chroma .vi {  }

/* NameVariableMagic */ // .chroma .vm {  }

/* Literal */ // .chroma .l {  }

/* LiteralDate */ // .chroma .ld {  }
/* LiteralString */ .chroma .s { color: var(--base02); }
/* LiteralStringAffix */ .chroma .sa { color: var(--base03); }
/* LiteralStringBacktick */ .chroma .sb { color: var(--base02); }
/* LiteralStringChar */ .chroma .sc { color: var(--base02); }
/* LiteralStringDelimiter */ .chroma .dl { color: var(--base03); }
/* LiteralStringDoc */ .chroma .sd {
  font-style: italic;
  color: var(--base02);
}
/* LiteralStringDouble */ .chroma .s2 { color: var(--base02); }
/* LiteralStringEscape */ .chroma .se { color: var(--base02); }
/* LiteralStringHeredoc */ .chroma .sh { color: var(--base02); }
/* LiteralStringInterpol */ .chroma .si { color: var(--base02); }
/* LiteralStringOther */ .chroma .sx { color: var(--base02); }
/* LiteralStringRegex */ .chroma .sr { color: var(--base0E); }
/* LiteralStringSingle */ .chroma .s1 { color: var(--base02); }
/* LiteralStringSymbol */ .chroma .ss { color: var(--base11); }
/* LiteralNumber */ .chroma .m { color: var(--base04); }
/* LiteralNumberBin */ .chroma .mb { color: var(--base0E); }
/* LiteralNumberFloat */ .chroma .mf { color: var(--base04); }
/* LiteralNumberHex */ .chroma .mh { color: var(--base04); }
/* LiteralNumberInteger */ .chroma .mi { color: var(--base04); }
/* LiteralNumberIntegerLong */ .chroma .il { color: var(--base04); }
/* LiteralNumberOct */ .chroma .mo { color: var(--base04); }
/* Operator */ .chroma .o { color: var(--base01); }
/* OperatorWord */ .chroma .ow { color: var(--base0F); }
/* Punctuation */ .chroma .p { color: var(--base01); }
/* Comment */ .chroma .c { color: var(--base01); }
/* CommentHashbang */ .chroma .ch {
  font-style: italic;
  color: var(--base0B);
}
/* CommentMultiline */ .chroma .cm { color: var(--base01); }
/* CommentSingle */ .chroma .c1 { color: var(--base06); }
/* CommentSpecial */ .chroma .cs { color: var(--base06); }
/* CommentPreproc */ .chroma .cp { color: var(--base05); }
/* CommentPreprocFile */ .chroma .cpf { color: var(--base04); }

/* Generic */ // .chroma .g {  }
/* GenericDeleted */ .chroma .gd {
  background-color: var(--base07);
  border: 1px solid var(--base02);
}
/* GenericEmph */ .chroma .ge { font-style: italic; }
/* GenericError */ .chroma .gr { color: var(--base02); }
/* GenericHeading */ .chroma .gh { color: var(--base08); }
/* GenericInserted */ .chroma .gi {
  background-color: var(--base09);
  border: 1px solid var(--base04);
}
/* GenericOutput */ .chroma .go { color: var(--base13); }
/* GenericPrompt */ .chroma .gp { color: var(--base0A); }
/* GenericStrong */ .chroma .gs { font-weight: $font-weight-bold; }
/* GenericSubheading */ .chroma .gu { color: var(--base08); }
/* GenericTraceback */ .chroma .gt { color: var(--base0E); }
/* GenericUnderline */ .chroma .gl { text-decoration: underline; }
/* TextWhitespace */ .chroma .w { color: var(--base10); }
