//
// Control item
//

%control-item {
  --#{$prefix}control-item-label-color: #{$ouds-color-content-default};

  position: relative;
  display: flex;
  gap: $ouds-control-item-space-column-gap;
  min-width: $ouds-control-item-size-min-width;
  min-height: $form-check-min-height;
  padding: $ouds-control-item-space-inset;

  // Handle focus
  &:has(:focus-visible) {
    @include focus-visible();
  }

  .control-item-indicator {
    outline: 0;
    box-shadow: none;
  }

  // Handle disabled
  &:has([type]:disabled) {
    pointer-events: none;

    * {
      color: $ouds-color-action-disabled;
    }
  }

  // Handle interactive background
  &:has([type]:hover),
  &:has([type]:focus-visible),
  &:has([type]:active) {
    background-color: $ouds-control-item-color-bg-hover;
  }

  // Handle invalid state
  .was-validated &:has([type]:invalid),
  &:has([type].is-invalid) {
    --#{$prefix}control-item-label-color: #{$ouds-color-action-negative-enabled};
  }

  .was-validated &:has([type]:invalid:hover),
  &:has([type].is-invalid:hover) {
    --#{$prefix}control-item-label-color: #{$ouds-color-action-negative-hover};
  }

  .was-validated &:has([type]:invalid:focus-visible),
  &:has([type].is-invalid:focus-visible) {
    --#{$prefix}control-item-label-color: #{$ouds-color-action-negative-focus};
  }

  .was-validated &:has([type]:invalid:active),
  &:has([type].is-invalid:active) {
    --#{$prefix}control-item-label-color: #{$ouds-color-action-negative-pressed};
  }
}


//
// Control item containers
//

.control-item-assets-container {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  max-height: $ouds-control-item-size-max-height-assets-container;

  svg,
  img,
  .icon {
    width: 1em;
    height: 1em;
    overflow: hidden;
    font-size: $ouds-control-item-size-icon;
    line-height: 1;
  }
}

.control-item-text-container {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  row-gap: $ouds-control-item-space-row-gap;
  justify-content: center;
}


//
// Control item atoms
//

// Label
.control-item-label {
  display: block;
  color: var(--#{$prefix}control-item-label-color, $ouds-color-content-default);
  cursor: $form-check-label-cursor;
  @include get-font-size("label-large");

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
    background-color: transparent;
  }
}

// Helper
.control-item-helper {
  display: block;
  margin: 0;
  color: $ouds-color-content-muted;
  @include get-font-size("label-medium");
}

// Indicator
.control-item-indicator {
  --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-unselected};
  --#{$prefix}control-item-indicator-color: #{$ouds-color-border-emphasized};

  position: relative;
  flex-shrink: 0;
  width: $form-check-input-width;
  height: $form-check-input-width;
  color: var(--#{$prefix}control-item-indicator-color);
  vertical-align: middle;
  appearance: none;
  cursor: $form-check-label-cursor;
  background-color: transparent;
  border: var(--#{$prefix}control-item-indicator-border) solid $ouds-color-action-enabled;
  border-color: var(--#{$prefix}control-item-indicator-color);
  print-color-adjust: exact;

  &::before {
    position: absolute;
    top: calc(-1 * var(--#{$prefix}control-item-indicator-border)); // stylelint-disable-line function-disallowed-list
    left: calc(-1 * var(--#{$prefix}control-item-indicator-border)); // stylelint-disable-line function-disallowed-list
    display: block;
    width: calc(100% + 2 * var(--#{$prefix}control-item-indicator-border)); // stylelint-disable-line function-disallowed-list
    height: calc(100% + 2 * var(--#{$prefix}control-item-indicator-border)); // stylelint-disable-line function-disallowed-list
    content: "";
    background-color: transparent;
    mask-repeat: no-repeat;
  }

  &[type="checkbox"] {
    @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    @include border-radius($form-check-radio-border-radius);
  }

  &:checked,
  &:indeterminate {
    --#{$prefix}control-item-indicator-color: #{$ouds-color-action-selected};
  }

  &:indeterminate[type="checkbox"] {
    --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-selected};

    &::before {
      background-color: currentcolor;
      mask-image: escape-svg($form-check-input-indeterminate-bg-image);
    }
  }

  &:checked {
    &::before {
      background-color: currentcolor;
    }

    &[type="checkbox"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-selected};
      &::before {
        mask-image: escape-svg($form-check-input-checked-bg-image);
      }
    }

    &[type="radio"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-selected};
      &::before {
        mask-image: escape-svg($form-check-radio-checked-bg-image);
      }
    }

    &:hover {
      &[type="checkbox"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-selected-hover};
      }

      &[type="radio"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-selected-hover};
      }
    }

    &:focus-visible {
      &[type="checkbox"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-selected-focus};
      }

      &[type="radio"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-selected-focus};
      }
    }

    &:active {
      &[type="checkbox"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-selected-pressed};
      }

      &[type="radio"] {
        --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-selected-pressed};
      }
    }
  }

  &:hover {
    --#{$prefix}control-item-indicator-color: #{$ouds-color-action-hover};

    &[type="checkbox"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-unselected-hover};
    }

    &[type="radio"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-unselected-hover};
    }
  }

  &:focus-visible {
    --#{$prefix}control-item-indicator-color: #{$ouds-color-action-focus};

    &[type="checkbox"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-unselected-focus};
    }

    &[type="radio"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-unselected-focus};
    }
  }

  &:active {
    --#{$prefix}control-item-indicator-color: #{$ouds-color-action-pressed};

    &[type="checkbox"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-checkbox-border-width-unselected-pressed};
    }
    &[type="radio"] {
      --#{$prefix}control-item-indicator-border: #{$ouds-radio-button-border-width-unselected-pressed};
    }
  }

  &:disabled {
    --#{$prefix}control-item-indicator-color: #{$ouds-color-action-disabled};
    pointer-events: none;
  }
}


//
// Control item variants
//

.control-item-divider {
  padding-bottom: subtract($ouds-control-item-space-inset, 1px);
  border-bottom: 1px solid $ouds-color-border-default; // TODO: Introduce design token once created
}

.control-item-reverse {
  flex-direction: row-reverse;
}


//
// Control item standalone
//

%control-item-standalone {
  @extend %control-item;
  @extend .control-item-label;
  display: inline-flex;
  gap: 0;
  align-items: center;
  justify-content: center;
  min-width: $ouds-checkbox-size-min-width;
  min-height: $ouds-checkbox-size-min-height;
}


//
// Checkbox
//

.checkbox-item {
  @extend %control-item;
}

.checkbox-standalone {
  @extend %control-item-standalone;
}


//
// Radio button
//

.radio-button-item {
  @extend %control-item;
}

.radio-button-standalone {
  @extend %control-item-standalone;
}

.radio-button-additional-label {
  display: block;
  margin: 0;
  font-weight: $ouds-font-weight-strong;
  color: $ouds-color-content-default;
  @include get-font-size("label-medium");
}

.radio-button-item-outlined {
  &:hover,
  &:active,
  &:has([type]:checked) {
    padding: subtract($ouds-control-item-space-inset, 1px);
    border: 1px solid $ouds-color-border-default; // TODO: Introduce design token once created
  }

  &:has([type]:checked) {
    border-color: $ouds-color-action-selected;

    &:hover {
      border-color: $ouds-color-action-hover;
    }

    &:active {
      border-color: $ouds-color-action-pressed;
    }

    .was-validated &:has([type]:invalid),
    &:has([type].is-invalid) {
      border-color: $ouds-color-action-negative-enabled;
    }

    .was-validated &:has([type]:invalid:hover),
    &:has([type].is-invalid:hover) {
      border-color: $ouds-color-action-negative-hover;
    }

    .was-validated &:has([type]:invalid:focus-visible),
    &:has([type].is-invalid:focus-visible) {
      border-color: $ouds-color-action-negative-focus;
    }

    .was-validated &:has([type]:invalid:active),
    &:has([type].is-invalid:active) {
      border-color: $ouds-color-action-negative-pressed;
    }
  }

  &:hover {
    border-color: $ouds-color-action-hover;
  }

  &:active {
    border-color: $ouds-color-action-pressed;
  }

  .was-validated &:has([type]:invalid:hover),
  &:has([type].is-invalid:hover) {
    border-color: $ouds-color-action-negative-hover;
  }

  .was-validated &:has([type]:invalid:focus-visible),
  &:has([type].is-invalid:focus-visible) {
    border-color: $ouds-color-action-negative-focus;
  }

  .was-validated &:has([type]:invalid:active),
  &:has([type].is-invalid:active) {
    border-color: $ouds-color-action-negative-pressed;
  }
}


//
// Bootstrap compatibility
//

@if $enable-bootstrap-compatibility {
  .form-check {
    @extend %control-item;
    align-items: center;
  }

  .form-check-input {
    @extend .control-item-indicator;
  }

  .form-check-label {
    @extend .control-item-label;
  }

  .form-check-reverse {
    @extend .control-item-reverse;
  }
}
