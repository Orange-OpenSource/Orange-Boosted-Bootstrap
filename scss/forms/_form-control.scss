//
// General form controls (plus a few specific high-level interventions)
//

%form-item {
  // scss-docs-start form-control-css-vars
  --#{$prefix}form-control-color: var(--#{$prefix}color-content-default);
  --#{$prefix}form-control-background-color: var(--#{$prefix}color-action-support-enabled);
  --#{$prefix}form-control-border-color: #{$ouds-text-input-color-border-enabled};
  --#{$prefix}form-control-border-width-top: 0px;
  --#{$prefix}form-control-border-width-right: 0px;
  --#{$prefix}form-control-border-width-bottom: #{$ouds-text-input-border-width-default};
  --#{$prefix}form-control-border-width-left: 0px;
  --#{$prefix}form-control-border-width-focus: 0px;
  --#{$prefix}form-control-border-radius: #{$ouds-text-input-border-radius-default};
  --#{$prefix}form-control-padding-x: #{$ouds-text-input-space-padding-inline-default};
  --#{$prefix}form-control-padding-y: #{$ouds-text-input-space-padding-block-default};
  --#{$prefix}form-control-max-width: #{$ouds-text-input-size-max-width};
  --#{$prefix}form-control-min-height: #{$ouds-text-input-size-min-height};
  --#{$prefix}form-control-min-width: #{$ouds-text-input-size-min-width};
  // scss-docs-end form-control-css-vars

  // scss-docs-start form-label-css-vars
  --#{$prefix}form-label-color: var(--#{$prefix}color-content-muted);
  // scss-docs-end form-label-css-vars
}

.form-control-item {
  @extend %form-item;
  position: relative;

  > label {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    display: flex;
    align-items: center;
    max-width: var(--#{$prefix}form-control-max-width);
    height: 100%;
    padding-top: subtract(var(--#{$prefix}form-control-padding-y), var(--#{$prefix}form-control-border-width-top));
    padding-right: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-right));
    padding-bottom: subtract(var(--#{$prefix}form-control-padding-y), var(--#{$prefix}form-control-border-width-bottom));
    padding-left: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-left));
    overflow: hidden;
    color: var(--#{$prefix}form-label-color);
    text-align: start;
    pointer-events: none;
    transform-origin: 0 0;
    @include get-font-size("label-large");
    @include transition(all .1s ease-out);
  }

  > .form-control {
    min-width: var(--#{$prefix}form-control-min-width);
    max-width: var(--#{$prefix}form-control-max-width);
    min-height: var(--#{$prefix}form-control-min-height);

    // stylelint-disable-next-line declaration-no-important
    padding-top: calc(var(--#{$prefix}form-control-padding-y) * 4) !important; // stylelint-disable-line function-disallowed-list

    &:placeholder-shown:not([placeholder=""]) ~ label,
    &[placeholder]:not(:placeholder-shown) ~ label,
    &:focus ~ label {
      top: calc(var(--#{$prefix}form-control-padding-y) / 2); // stylelint-disable-line function-disallowed-list
      align-items: flex-start;
      text-overflow: ellipsis;
      white-space: nowrap;
      @include get-font-size("label-small");
    }
  }

  > :disabled ~ label,
  > .form-control:disabled ~ label {
    --#{$prefix}form-label-color: var(--#{$prefix}color-action-disabled);
  }
}

.form-control-item ~ .form-text {
  @extend %form-item;

  max-width: var(--#{$prefix}form-control-max-width);
  padding-right: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-right));
  padding-left: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-left));
}

.form-control {
  @extend %form-item;

  display: block;
  width: 100%;
  // padding-top: subtract(var(--#{$prefix}form-control-padding-y), var(--#{$prefix}form-control-border-width-top));
  padding-right: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-right));
  padding-bottom: subtract(var(--#{$prefix}form-control-padding-y), var(--#{$prefix}form-control-border-width-bottom));
  padding-left: subtract(var(--#{$prefix}form-control-padding-x), var(--#{$prefix}form-control-border-width-left));
  // OUDS mod: no font-family
  @include get-font-size("label-large"); // OUDS mod: instead of @include font-size($input-font-size);
  // OUDS mod: no font-weight
  // OUDS mod: no line-height
  color: var(--#{$prefix}form-control-color); // OUDS mod
  appearance: none; // Fix appearance for date inputs in Safari
  background-color: var(--#{$prefix}form-control-background-color); // OUDS mod
  background-clip: padding-box;
  border-color: var(--#{$prefix}form-control-border-color); // OUDS mod
  border-style: solid; // OUDS mod
  border-width: var(--#{$prefix}form-control-border-width-top) var(--#{$prefix}form-control-border-width-right) var(--#{$prefix}form-control-border-width-bottom) var(--#{$prefix}form-control-border-width-left); // OUDS mod
  @include get-font-size("label-large"); // OUDS mod

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius(var(--#{$prefix}form-control-border-radius), 0); // OUDS mod

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // OUDS mod
  &.form-control-alternative {
    --#{$prefix}form-control-background-color: transparent;
    --#{$prefix}form-control-border-width-top: #{$ouds-text-input-border-width-default};
    --#{$prefix}form-control-border-width-right: #{$ouds-text-input-border-width-default};
    --#{$prefix}form-control-border-width-left: #{$ouds-text-input-border-width-default};
  }

  &.form-control-rounded {
    --#{$prefix}form-control-border-radius: #{$ouds-text-input-border-radius-rounded};
  }
  // End mod

  &[type="file"] {
    overflow: hidden; // prevent pseudo element button overlap

    &:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
  }

  // OUDS mod
  &:not(.form-control-color):hover:not(:focus):not(:disabled):not(:read-only) {
    --#{$prefix}form-control-border-color: #{$ouds-text-input-color-border-hover};
    &:not(.form-control-alternative) {
      --#{$prefix}form-control-background-color: #{$ouds-color-action-support-hover};
    }
  }
  // End mod

  // Customize the `:focus` state to imitate native WebKit styles.
  &:not(.form-control-color):focus:not(:disabled):not(:read-only) { // OUDS mod: instead of `&:focus`
    --#{$prefix}form-control-background-color: var(--#{$prefix}color-action-support-pressed);
    --#{$prefix}form-control-border-color: #{$ouds-text-input-color-border-focus};
    --#{$prefix}form-control-border-width-bottom: #{$ouds-text-input-border-width-focus};
    &.form-control-alternative {
      --#{$prefix}form-control-background-color: transparent;
      --#{$prefix}form-control-border-width-top: #{$ouds-text-input-border-width-focus};
      --#{$prefix}form-control-border-width-right: #{$ouds-text-input-border-width-focus};
      --#{$prefix}form-control-border-width-left: #{$ouds-text-input-border-width-focus};
    }

    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }

  // Read only inputs
  &:not(.form-control-color):not(.form-control-alternative):read-only:not(:disabled) {
    --#{$prefix}form-control-background-color: transparent;
    --#{$prefix}form-control-border-color: #{$ouds-color-border-muted};
    --#{$prefix}form-control-border-width-top: #{$ouds-text-input-border-width-default};
    --#{$prefix}form-control-border-width-right: #{$ouds-text-input-border-width-default};
    --#{$prefix}form-control-border-width-left: #{$ouds-text-input-border-width-default};

    outline: 0;
  }

  &.form-control-alternative:read-only:not(:disabled) {
    --#{$prefix}form-control-background-color: var(--#{$prefix}color-action-support-disabled);
    --#{$prefix}form-control-border-width-top: 0px;
    --#{$prefix}form-control-border-width-right: 0px;
    --#{$prefix}form-control-border-width-bottom: 0px;
    --#{$prefix}form-control-border-width-left: 0px;

    outline: 0;
  }
  // End mod

  &::-webkit-date-and-time-value {
    // On Android Chrome, form-control's "width: 100%" makes the input width too small
    // Tested under Android 11 / Chrome 89, Android 12 / Chrome 100, Android 13 / Chrome 109
    //
    // On iOS Safari, form-control's "appearance: none" + "width: 100%" makes the input width too small
    // Tested under iOS 16.2 / Safari 16.2
    min-width: 85px; // Seems to be a good minimum safe width

    // Add some height to date inputs on iOS
    // https://github.com/twbs/bootstrap/issues/23307
    // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved

    // Multiply line-height by 1em if it has no unit
    height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);

    // Android Chrome type="date" is taller than the other inputs
    // because of "margin: 1px 24px 1px 4px" inside the shadow DOM
    // Tested under Android 11 / Chrome 89, Android 12 / Chrome 100, Android 13 / Chrome 109
    margin: 0;
  }

  // Prevent excessive date input height in Webkit
  // https://github.com/twbs/bootstrap/issues/34433
  &::-webkit-datetime-edit {
    display: block;
    padding: 0;
  }

  // Placeholder
  &::placeholder {
    --#{$prefix}form-control-color: var(--#{$prefix}color-content-muted);
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled {
    --#{$prefix}form-control-color: var(--#{$prefix}color-action-disabled);
    --#{$prefix}form-control-border-color: var(--#{$prefix}color-action-disabled);
    &:not(.form-control-alternative) { // OUDS mod
      --#{$prefix}form-control-background-color: var(--#{$prefix}color-action-support-disabled);
    }

    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  // File input buttons theming
  &::file-selector-button {
    padding: subtract($input-padding-y, 1px) $input-padding-x add($input-padding-y, 1px); // OUDS mod
    margin: calc(-1 * (#{$input-padding-y} - 1px)) (-$input-padding-x) calc(-1 * (#{$input-padding-y} + 1px)); // stylelint-disable-line function-disallowed-list
    margin-inline-end: $input-padding-x;
    color: $form-file-button-color;
    @include gradient-bg($form-file-button-bg);
    pointer-events: none;
    border-color: inherit;
    border-style: solid;
    border-width: 0;
    border-inline-end-width: $input-border-width;
    border-radius: 0; // stylelint-disable-line property-disallowed-list
    @include transition($btn-transition);
  }

  // OUDS mod
  &:disabled::file-selector-button {
    color: $input-disabled-color;
    background-color: $input-disabled-bg;
    border-color: $input-disabled-border-color;
  }
  // End mod

  &:hover:not(:disabled):not([readonly])::file-selector-button {
    background-color: $form-file-button-hover-bg;
  }
}

// Readonly controls as plain text
//
// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)

.form-control-plaintext {
  display: block;
  width: 100%;
  padding: $input-padding-y 0;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-line-height;
  color: $input-plaintext-color;
  background-color: transparent;
  border: solid transparent;
  border-width: $input-border-width 0;

  &:focus {
    outline: 0;
    box-shadow: none; // Bosted mod
  }

  &.form-control-sm,
  &.form-control-lg {
    padding-right: 0;
    padding-left: 0;
  }
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// Repeated in `_input_group.scss` to avoid Sass extend issues.

.form-control-sm {
  min-height: $input-height-sm;
  padding: $input-padding-y-sm $input-padding-x-sm add($input-padding-y-sm, 1px); // OUDS mod
  line-height: $line-height-sm; // OUDS mod
  @include font-size($input-font-size-sm);
  @include border-radius($input-border-radius-sm);

  &::file-selector-button {
    padding: add($input-padding-y-sm, 1px) $input-padding-x-sm add($input-padding-y-sm, 3px); // OUDS mod
    margin: add(-$input-padding-y-sm, -1px) (-$input-padding-x-sm) add(-$input-padding-y-sm, -3px); // OUDS mod
    margin-inline-end: $input-padding-x-sm;
  }
}

.form-control-lg {
  min-height: $input-height-lg;
  line-height: $input-line-height-lg; // OUDS mod
  @include font-size($input-font-size-lg);
  @include border-radius($input-border-radius-lg);

  &::file-selector-button {
    padding: subtract($input-padding-y-lg, 1px) $input-padding-x-lg add($input-padding-y-lg, 1px); // OUDS mod
    margin: calc(-1 * (#{$input-padding-y} - 1px)) (-$input-padding-x) calc(-1 * (#{$input-padding-y} + 1px)); // stylelint-disable-line function-disallowed-list
    margin-inline-end: $input-padding-x-lg;
  }
}

// Make sure textareas don't shrink too much when resized
// https://github.com/twbs/bootstrap/pull/29124
// stylelint-disable selector-no-qualifying-type
textarea {
  &.form-control {
    min-height: $input-height;
  }

  &.form-control-sm {
    min-height: $input-height-sm;
  }

  &.form-control-lg {
    min-height: $input-height-lg;
  }
}
// stylelint-enable selector-no-qualifying-type

.form-control-color {
  width: $form-color-width;
  height: $input-height;
  padding: $input-padding-y;
  border-color: $form-color-border-color; // OUDS mod

  // OUDS mod
  &:hover {
    background-color: $form-color-hover-bg-color;
  }

  &:disabled {
    background-color: $form-color-disabled-bg-color;
    border-color: $form-color-disabled-border-color;

    &::-moz-color-swatch {
      filter: $form-color-disabled-background-swatch;
    }

    &::-webkit-color-swatch {
      filter: $form-color-disabled-background-swatch;
    }
  }
  // End mod

  &:not(:disabled):not([readonly]) {
    cursor: pointer;
  }

  &::-moz-color-swatch {
    border: 0 !important; // stylelint-disable-line declaration-no-important
    @include border-radius($input-border-radius);
  }

  &::-webkit-color-swatch {
    border: 0 !important; // stylelint-disable-line declaration-no-important
    @include border-radius($input-border-radius);
  }

  &.form-control-sm { height: $input-height-sm; }
  &.form-control-lg { height: $input-height-lg; }
}
