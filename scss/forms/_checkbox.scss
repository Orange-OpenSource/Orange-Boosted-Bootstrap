//
// Control item
//

%control-item {
  position: relative;
  display: flex;
  gap: $ouds-control-item-space-column-gap;
  min-width: $ouds-control-item-size-min-width;
  min-height: $form-check-min-height;
  padding: $ouds-control-item-space-inset;

  &:has(:focus-visible) {
    @include focus-visible();
  }

  &:has([type]:disabled),
  &:has([type][disabled]) {
    pointer-events: none;

    .control-item-form-label,
    .control-item-form-helper,
    svg,
    img,
    .icon {
      color: $ouds-color-action-disabled;
    }
  }

  &:has([type]:hover),
  &:has([type]:focus-visible),
  &:has([type]:active) {
    background-color: $ouds-control-item-color-bg-hover;
  }

  .was-validated &:has([type]:invalid),
  &:has([type].is-invalid) {
    .control-item-form-label {
      color: $ouds-color-action-negative-enabled;
    }
  }

  .was-validated &:has([type]:invalid:hover),
  &:has([type].is-invalid:hover) {
    .control-item-form-label {
      color: $ouds-color-action-negative-hover;
    }
  }

  .was-validated &:has([type]:invalid:focus-visible),
  &:has([type].is-invalid:focus-visible) {
    .control-item-form-label {
      color: $ouds-color-action-negative-focus;
    }
  }

  .was-validated &:has([type]:invalid:active),
  &:has([type].is-invalid:active) {
    .control-item-form-label {
      color: $ouds-color-action-negative-pressed;
    }
  }
}

%control-item-border {
  border-bottom: 1px solid $ouds-color-border-default; // TODO: Introduce design token once created
}

%control-item-inverse {
  flex-direction: row-reverse;
}

%control-item-assets-container {
  display: flex;
  flex-shrink: 0;
  align-items: center;
  max-height: $ouds-control-item-size-max-height-assets-container;

  svg,
  img,
  .icon {
    width: 1em;
    height: 1em;
    overflow: hidden;
    font-size: $ouds-control-item-size-icon;
    line-height: 1;
  }
}

%control-item-text-container {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  row-gap: $ouds-control-item-space-row-gap;
  justify-content: center;
  word-break: break-all;
}

.control-item-form-label {
  display: block;
  color: $ouds-color-content-default;
  cursor: $form-check-label-cursor;
  @include get-font-size("label-large");

  &::before {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
    background-color: transparent;
  }
}

.control-item-form-helper {
  display: block;
  margin: 0;
  color: $ouds-color-content-muted;
  @include get-font-size("label-medium");
}

//
// Checkbox item
//

.checkbox-item {
  @extend %control-item;
}

.checkbox-item-indicator-container,
.checkbox-item-icon-container {
  @extend %control-item-assets-container;
}

.checkbox-item-text-container {
  @extend %control-item-text-container;
}

//
// Variants
//

.checkbox-item-border {
  @extend %control-item-border;
}

.checkbox-item-inverse {
  @extend %control-item-inverse;
}

.checkbox-item-divider {
  @extend %control-item-border;
}

//
// Checkbox indicator
//

.checkbox-indicator {
  flex-shrink: 0;
  width: $form-check-input-width;
  height: $form-check-input-width;
  vertical-align: middle;
  appearance: none;
  cursor: $form-check-label-cursor;
  background-color: $ouds-color-border-emphasized;
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: $form-check-input-width;
  print-color-adjust: exact;

  &[type="checkbox"] {
    mask: escape-svg($ouds-checkbox-unselected-icon);
  }

  &:hover,
  &:focus-visible,
  &:active {
    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-unselected-hover-icon);
    }
  }

  &:indeterminate {
    background-color: $ouds-color-action-selected;

    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-indeterminate-icon);
    }
  }

  &:checked {
    background-color: $ouds-color-action-selected;

    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-selected-icon);
    }
  }

  &:hover {
    background-color: $ouds-color-action-hover;
  }

  &:focus-visible {
    background-color: $ouds-color-action-focus;
  }

  &:active {
    background-color: $ouds-color-action-pressed;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    pointer-events: none;
    background-color: $ouds-color-action-disabled;
  }
}

//
// Checkbox texts
//

.checkbox-label {
  @extend .control-item-form-label;
}

.checkbox-helper {
  @extend .control-item-form-helper;
}

//
// Checkbox standalone
//

.checkbox-standalone {
  @extend .checkbox-item;
  @extend .checkbox-label;
  display: inline-flex;
  gap: 0;
  align-items: center;
  justify-content: center;
  min-width: $ouds-checkbox-size-min-width;
  min-height: $ouds-checkbox-size-min-height;
}


//
// Bootstrap compatibility
//

@if $enable-bootstrap-compatibility {
  .form-check {
    @extend .checkbox-item;
    align-items: center;
  }

  .form-check-input {
    @extend .checkbox-indicator;
  }

  .form-check-label {
    @extend .checkbox-label;
  }

  .form-check-reverse {
    @extend .checkbox-item-inverse;
  }
}
