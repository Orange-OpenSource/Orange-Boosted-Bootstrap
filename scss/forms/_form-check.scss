//
// Check/radio
//

.form-check {
  position: relative; // OUDS mod
  display: flex; // OUDS mod: instead of `block`
  gap: $ouds-control-item-space-column-gap; // OUDS mod
  align-items: center; // OUDS mod
  min-width: $ouds-control-item-size-min-width; // OUDS mod
  min-height: $form-check-min-height;
  padding: $ouds-control-item-space-inset; // OUDS mod
  // OUDS mod: no `padding-left`
  // OUDS mod: no `margin-bottom`

  // OUDS mod: no `.form-check-input`

  // OUDS mod: Handle states more globally
  &:has(.form-check-input:focus-visible) {
    @include focus-visible();
  }

  // Label
  &:has(.form-check-input:disabled),
  &:has(.form-check-input[disabled]) {
    .form-check-label {
      color: $ouds-color-action-disabled;
      pointer-events: none;
    }
  }

  &:has(.form-check-input[readonly]) {
    .form-check-label {
      pointer-events: none;
    }
  }

  // Background for label in every case
  &:has(.form-check-input:hover),
  &:has(.form-check-input:focus-visible),
  &:has(.form-check-input:active) {
    .form-check-label::before {
      background-color: $ouds-control-item-color-bg-hover;
    }
  }

  // Label for invalid checkboxes
  .was-validated &:has(.form-check-input:invalid),
  &:has(.form-check-input.is-invalid) {
    .form-check-label {
      color: $ouds-color-action-negative-enabled;
    }
  }

  .was-validated &:has(.form-check-input:invalid:hover),
  &:has(.form-check-input.is-invalid:hover) {
    .form-check-label {
      color: $ouds-color-action-negative-hover;
    }
  }

  .was-validated &:has(.form-check-input:invalid:focus-visible),
  &:has(.form-check-input.is-invalid:focus-visible) {
    .form-check-label {
      color: $ouds-color-action-negative-focus;
    }
  }

  .was-validated &:has(.form-check-input:invalid:active),
  &:has(.form-check-input.is-invalid:active) {
    .form-check-label {
      color: $ouds-color-action-negative-pressed;
    }
  }
  // End mod
}

// OUDS mod: handled differently from Bootstrap
.form-check-reverse {
  flex-direction: row-reverse;
}
// End mod

.form-check-input {
  // OUDS mod: no `--#{$prefix}form-check-bg`

  flex-shrink: 0;
  width: $form-check-input-width;
  height: $form-check-input-width;
  // OUDS mod: no margin-top
  vertical-align: middle; // OUDS mod: instead of `top`
  appearance: none;
  cursor: $form-check-label-cursor; // OUDS mod
  background-color: $ouds-color-border-emphasized; // OUDS mod: instead of `var(--#{$prefix}form-check-bg)`
  // OUDS mod: use mask rather than background
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: $form-check-input-width;
  // End mod
  // OUDS mod: no border
  print-color-adjust: exact; // Keep themed appearance for print
  // OUDS mod: no transition

  &[type="checkbox"] {
    mask: escape-svg($ouds-checkbox-unselected-icon); // OUDS mod: use svg instead of border-radius
  }

  // OUDS mod: no radio

  // OUDS mod: handle differently the checkbox
  &:hover,
  &:focus-visible,
  &:active {
    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-unselected-hover-icon);
    }
  }

  &:indeterminate {
    background-color: $ouds-color-action-selected;

    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-indeterminate-icon);
    }
  }

  &:checked {
    background-color: $ouds-color-action-selected;

    &[type="checkbox"] {
      mask: escape-svg($ouds-checkbox-selected-icon);
    }
  }

  &:hover {
    background-color: $ouds-color-action-hover;
  }

  &:focus-visible {
    background-color: $ouds-color-action-focus;
  }

  &:active {
    background-color: $ouds-color-action-pressed;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled,
  &[readonly] {
    pointer-events: none;
    background-color: $ouds-color-action-disabled;
  }
  // End mod
}

.form-check-label {
  // OUDS mod: no `color`
  cursor: $form-check-label-cursor;

  // OUDS mod
  &::before,
  &::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: "";
    background-color: transparent;
  }

  &::before {
    z-index: -1;
  }
  // End mod
}

//
// Switch
//

// OUDS mod: no `.form-switch`

.form-check-inline {
  display: inline-flex; // OUDS mod: instead of `inline-block`
  // OUDS mod: no `margin-right`
}

// OUDS mod: no `.btn-check`

// OUDS mod: no `@if enable-dark-mode`
