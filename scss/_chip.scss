.chip-container {
  @include list-unstyled();
  display: flex;
  flex-direction: row;
  gap: 0 8px; // TODO: update values once the component is developed
  overflow: auto;
}

.chip {
  position: relative;
  display: flex;
  flex-shrink: 0;
  align-items: center;
  min-height: $ouds-chip-size-min-height-interactive-area;
  white-space: nowrap;

  [type="radio"],
  [type="checkbox"] { // Not `input` because of the incoming editable variant
    position: absolute;
    clip: rect(0, 0, 0, 0);
    pointer-events: none;
  }
}

.chip-filter, // Sort what should be inside filter, suggestion, filter-expanded, both or all
.chip-suggestion {
  --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-enabled};
  --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-enabled};
  --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-unselected)};
  --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-enabled};
  --#{$prefix}chip-padding-block: #{$ouds-chip-space-padding-block};
  --#{$prefix}chip-padding-end: #{$ouds-chip-space-padding-inline-icon-none};
  --#{$prefix}chip-padding-start: #{$ouds-chip-space-padding-inline-icon-none};

  display: flex;
  gap: $ouds-chip-space-column-gap-icon;
  align-items: center;
  justify-content: center;
  min-width: $ouds-chip-size-min-width;
  min-height: $ouds-chip-size-min-height;
  padding: subtract(var(--#{$prefix}chip-padding-block), var(--#{$prefix}chip-border-width)) subtract(var(--#{$prefix}chip-padding-end), var(--#{$prefix}chip-border-width)) subtract(var(--#{$prefix}chip-padding-block), var(--#{$prefix}chip-border-width)) subtract(var(--#{$prefix}chip-padding-start), var(--#{$prefix}chip-border-width));
  @include get-font-size("label-medium");
  font-weight: 700;
  color: var(--#{$prefix}chip-color);
  background-color: var(--#{$prefix}chip-bg);
  border: var(--#{$prefix}chip-border-width) solid var(--#{$prefix}chip-border-color);
  border-radius: $ouds-chip-border-radius; // stylelint-disable-line property-disallowed-list

  &::after { // TODO: Set a table to explain what pseudo-elements are used or not ?
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
    content: "";
  }

  &:hover {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-hover};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-hover};
    --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-unselected-interaction)};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-hover};
  }

  &:focus-visible {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-focus};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-focus};
    --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-unselected-interaction)};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-focus};
  }

  &:active {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-pressed};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-pressed};
    --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-unselected-interaction)};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-pressed};
  }

  &:disabled {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-disabled};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-disabled};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-disabled};

    pointer-events: none;
  }

  &:has(svg),
  &:has(img),
  &:has(.icon) {
    --#{$prefix}chip-padding-start: #{$ouds-chip-space-padding-inline-icon};
  }

  svg,
  img,
  .icon {
    width: 1em;
    height: 1em;
    overflow: hidden;
    font-size: px-to-rem($ouds-chip-size-icon);
    line-height: 1;
  }
}

.chip-filter {
  input:focus-visible ~ &,
  &:focus-visible,
  &:has(input:focus-visible) {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-focus};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-focus};
    --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-unselected-interaction)};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-focus};

    @include focus-visible();
  }

  input:disabled ~ &,
  &:disabled,
  &:has(input:disabled) {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-unselected-disabled};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-unselected-disabled};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-unselected-disabled};

    pointer-events: none;
  }

  input:checked:focus-visible ~ &,
  &[aria-pressed="true"]:focus-visible,
  &:has(input:checked:focus-visible) {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-selected-focus};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-selected-focus};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-selected-focus};
    --#{$prefix}chip-tick-color: currentcolor;
  }

  input:checked:disabled ~ &,
  &[aria-pressed="true"]:disabled,
  &:has(input:checked:disabled) {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-selected-disabled};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-selected-disabled};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-selected-disabled};
    --#{$prefix}chip-tick-color: currentcolor;
  }

  &:has(svg),
  &:has(img),
  &:has(.icon) {
    --#{$prefix}chip-padding-start: #{$ouds-chip-space-padding-inline-icon-none};
    --#{$prefix}chip-padding-end: #{$ouds-chip-space-padding-inline-icon};
  }
}

input:checked ~ .chip-filter,
.chip-filter[aria-pressed="true"],
.chip-filter:has(input:checked) {
  --#{$prefix}chip-bg: #{$ouds-chip-color-bg-selected-enabled};
  --#{$prefix}chip-border-color: #{$ouds-chip-color-border-selected-enabled};
  --#{$prefix}chip-border-width: #{px-to-rem($ouds-chip-border-width-selected)};
  --#{$prefix}chip-color: #{$ouds-chip-color-content-selected-enabled};
  --#{$prefix}chip-padding-start: #{$ouds-chip-space-padding-inline-icon};
  --#{$prefix}chip-tick-color: #{$ouds-chip-color-content-selected-tick-enabled};

  &:hover {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-selected-hover};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-selected-hover};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-selected-hover};
    --#{$prefix}chip-tick-color: currentcolor;
  }

  &:active {
    --#{$prefix}chip-bg: #{$ouds-chip-color-bg-selected-pressed};
    --#{$prefix}chip-border-color: #{$ouds-chip-color-border-selected-pressed};
    --#{$prefix}chip-color: #{$ouds-chip-color-content-selected-pressed};
    --#{$prefix}chip-tick-color: currentcolor;
  }

  &::before {
    width: 1em;
    height: 1em;
    overflow: hidden;
    font-size: $ouds-chip-size-icon;
    line-height: 1;
    color: var(--#{$prefix}chip-tick-color);
    content: "";
    background-color: currentcolor;
    mask: escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#000'><path d='m13.292 5.047-6.07 7a.978.978 0 0 1-.74.328.977.977 0 0 1-.74-.329l-3.035-3.5A.83.83 0 0 1 2.5 8a.84.84 0 0 1 .277-.619l.38-.35a.986.986 0 0 1 .67-.256c.236 0 .451.08.617.21l1.849 1.89 5.61-5.013a.989.989 0 0 1 .648-.237c.524 0 .948.392.948.875a.83.83 0 0 1-.207.547Z'/></svg>")) no-repeat 50% / calc($ouds-chip-size-icon); // stylelint-disable-line function-disallowed-list
  }
}

.chip-icon.chip-icon { // Best option since we don't want to duplicate this code.
  --#{$prefix}chip-padding-block: #{$ouds-chip-space-padding-block-icon-only};
  --#{$prefix}chip-padding-end: #{$ouds-chip-space-padding-inline-icon};
  --#{$prefix}chip-padding-start: #{$ouds-chip-space-padding-inline-icon};
}
