{"version":3,"sourceRoot":"","sources":["../../../../node_modules/@ouds/web-common/scss/mixins/_banner.scss","../../../../node_modules/@ouds/web-common/scss/mixins/_color-mode.scss","../../scss/tokens/_semantic-colors-custom-props.scss","../../scss/tokens/_component-colors-custom-props.scss","../../../../node_modules/@ouds/web-common/scss/_containers.scss","../../../../node_modules/@ouds/web-common/scss/mixins/_container.scss","../../../../node_modules/@ouds/web-common/scss/mixins/_breakpoints.scss","../../scss/tokens/_raw.scss","../../../../node_modules/@ouds/web-common/scss/_grid.scss","../../../../node_modules/@ouds/web-common/scss/mixins/_grid.scss","../../../../node_modules/@ouds/web-common/scss/mixins/_utilities.scss","../../../../node_modules/@ouds/web-common/scss/utilities/_api.scss"],"names":[],"mappings":"AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACgkGF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;ADpME;AAAA;AAAA;AAAA;EETF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AF/BE;AAAA;AAAA;EEoCF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;ACpGA;ECFA;EACA;EACA;EACA;EACA;EAKI;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;ACiDF;EFxDF;ICOI;;;;ACiDF;EFJF;IAEI;IACA,WGmYyB;;EHjYzB;IACE;;;;AI7DR;EAEI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;;AAKF;ECLA;EACA;EACA;EAEA;EACA;EACA;EAKI;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;AH8CF;EEpDF;ICMI;;;ADHF;ECWF;EAIA;EACA;EACA;EACA;EACA;EACA;;;AA+CI;EACE;;;AAGF;EApCJ;EACA;;;AAcA;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AAFF;EACE;EACA;;;AA+BE;EAhDJ;EACA;;;AAqDQ;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AA+DM;EAhEN;EACA;;;AAuEQ;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAwDU;EAxDV;;;AAmEM;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAPF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;AHlEN;EGkBE;IACE;;EAGF;IApCJ;IACA;;EAcA;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EAFF;IACE;IACA;;EA+BE;IAhDJ;IACA;;EAqDQ;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EA+DM;IAhEN;IACA;;EAuEQ;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAwDU;IAxDV;;EAmEM;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;EAPF;AAAA;IAEE;;EAGF;AAAA;IAEE;;;ACtnnnnnnnhB;EDqCY;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI;;EAPJ;IAOI","file":"ouds-web-grid.css","sourcesContent":["@mixin bsBanner($file) {\n  /*!\n   * OUDS Web #{$file} v0.5.0 (https://web.unified-design-system.orange.com/)\n   * Copyright 2014-2025 The OUDS Web Authors\n   * Copyright 2014-2025 Orange SA\n   * Licensed under MIT (https://github.com/Orange-OpenSource/Orange-Boosted-Bootstrap/blob/ouds/main/LICENSE)\n   * This a fork of Bootstrap: Initial license below\n   * Bootstrap #{$file} v5.3.5 (https://getbootstrap.com/)\n   * Copyright 2011-2025 The Bootstrap Authors\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   */\n}\n","// Kept it quite simple using only light and dark modes, but you can extend it like in https://codepen.io/louismaximepiton/pen/vYbEvLO for example, to allow more color modes.\n// OUDS mod: add `$invert-mode`, root mode and root-inverted mode\n// scss-docs-start color-mode-mixin\n@mixin color-mode($mode: light, $root: false, $inverted-mode: if($mode == light, dark, light)) {\n  @if $color-mode-type == \"media-query\" {\n    @if $root == true {\n      @media (prefers-color-scheme: $mode) {\n        #{$ouds-root-selector} {\n          @content;\n        }\n      }\n    } @else {\n      @media (prefers-color-scheme: $mode) {\n        @content;\n      }\n    }\n  } @else if $root == true and $mode == light {\n    #{$ouds-root-selector},\n    [data-bs-theme=\"#{$mode}\"],\n    #{$ouds-root-selector}[data-bs-theme=\"#{$mode}\"] [data-bs-theme=\"root\"],\n    #{$ouds-root-selector}[data-bs-theme=\"#{$inverted-mode}\"] [data-bs-theme=\"root-inverted\"] {\n      @content;\n    }\n  } @else {\n    [data-bs-theme=\"#{$mode}\"],\n    #{$ouds-root-selector}[data-bs-theme=\"#{$mode}\"] [data-bs-theme=\"root\"],\n    #{$ouds-root-selector}[data-bs-theme=\"#{$inverted-mode}\"] [data-bs-theme=\"root-inverted\"] {\n      @content;\n    }\n  }\n}\n// scss-docs-end color-mode-mixin\n","// Semantic custom properties applications\n// OUDS Core tokens version 1.5.0\n// Sosh Core tokens version 1.1.0\n// Sosh System tokens version 1.5.0\n\n// scss-docs-start ouds-all-semantic-css-color\n// scss-docs-start ouds-semantic-css-color\n@include color-mode(light, true) {\n  --#{$prefix}color-action-disabled: #{$ouds-color-action-disabled-light};\n  --#{$prefix}color-action-enabled: #{$ouds-color-action-enabled-light};\n  --#{$prefix}color-action-focus: #{$ouds-color-action-focus-light};\n  --#{$prefix}color-action-highlighted: #{$ouds-color-action-highlighted-light};\n  --#{$prefix}color-action-hover: #{$ouds-color-action-hover-light};\n  --#{$prefix}color-action-loading: #{$ouds-color-action-loading-light};\n  --#{$prefix}color-action-negative-enabled: #{$ouds-color-action-negative-enabled-light};\n  --#{$prefix}color-action-negative-focus: #{$ouds-color-action-negative-focus-light};\n  --#{$prefix}color-action-negative-hover: #{$ouds-color-action-negative-hover-light};\n  --#{$prefix}color-action-negative-loading: #{$ouds-color-action-negative-loading-light};\n  --#{$prefix}color-action-negative-pressed: #{$ouds-color-action-negative-pressed-light};\n  --#{$prefix}color-action-pressed: #{$ouds-color-action-pressed-light};\n  --#{$prefix}color-action-selected: #{$ouds-color-action-selected-light};\n  --#{$prefix}color-action-support-disabled: #{$ouds-color-action-support-disabled-light};\n  --#{$prefix}color-action-support-enabled: #{$ouds-color-action-support-enabled-light};\n  --#{$prefix}color-action-support-focus: #{$ouds-color-action-support-focus-light};\n  --#{$prefix}color-action-support-hover: #{$ouds-color-action-support-hover-light};\n  --#{$prefix}color-action-support-loading: #{$ouds-color-action-support-loading-light};\n  --#{$prefix}color-action-support-pressed: #{$ouds-color-action-support-pressed-light};\n  --#{$prefix}color-action-visited: #{$ouds-color-action-visited-light};\n  --#{$prefix}color-always-black: #{$ouds-color-always-black};\n  --#{$prefix}color-always-on-black: #{$ouds-color-always-on-black};\n  --#{$prefix}color-always-on-white: #{$ouds-color-always-on-white};\n  --#{$prefix}color-always-white: #{$ouds-color-always-white};\n  --#{$prefix}color-bg-emphasized: #{$ouds-color-bg-emphasized-light};\n  --#{$prefix}color-bg-primary: #{$ouds-color-bg-primary-light};\n  --#{$prefix}color-bg-secondary: #{$ouds-color-bg-secondary-light};\n  --#{$prefix}color-bg-tertiary: #{$ouds-color-bg-tertiary-light};\n  --#{$prefix}color-border-brand-primary: #{$ouds-color-border-brand-primary-light};\n  --#{$prefix}color-border-brand-secondary: #{$ouds-color-border-brand-secondary-light};\n  --#{$prefix}color-border-brand-tertiary: #{$ouds-color-border-brand-tertiary-light};\n  --#{$prefix}color-border-default: #{$ouds-color-border-default-light};\n  --#{$prefix}color-border-emphasized: #{$ouds-color-border-emphasized-light};\n  --#{$prefix}color-border-focus-inset: #{$ouds-color-border-focus-inset-light};\n  --#{$prefix}color-border-focus: #{$ouds-color-border-focus-light};\n  --#{$prefix}color-border-muted: #{$ouds-color-border-muted-light};\n  --#{$prefix}color-border-on-brand-primary: #{$ouds-color-border-on-brand-primary-light};\n  --#{$prefix}color-border-on-brand-secondary: #{$ouds-color-border-on-brand-secondary-light};\n  --#{$prefix}color-border-on-brand-tertiary: #{$ouds-color-border-on-brand-tertiary-light};\n  --#{$prefix}color-content-brand-primary: #{$ouds-color-content-brand-primary-light};\n  --#{$prefix}color-content-brand-secondary: #{$ouds-color-content-brand-secondary-light};\n  --#{$prefix}color-content-brand-tertiary: #{$ouds-color-content-brand-tertiary-light};\n  --#{$prefix}color-content-default: #{$ouds-color-content-default-light};\n  --#{$prefix}color-content-disabled: #{$ouds-color-content-disabled-light};\n  --#{$prefix}color-content-muted: #{$ouds-color-content-muted-light};\n  --#{$prefix}color-content-on-action-disabled: #{$ouds-color-content-on-action-disabled-light};\n  --#{$prefix}color-content-on-action-enabled: #{$ouds-color-content-on-action-enabled-light};\n  --#{$prefix}color-content-on-action-focus: #{$ouds-color-content-on-action-focus-light};\n  --#{$prefix}color-content-on-action-highlighted: #{$ouds-color-content-on-action-highlighted-light};\n  --#{$prefix}color-content-on-action-hover: #{$ouds-color-content-on-action-hover-light};\n  --#{$prefix}color-content-on-action-loading: #{$ouds-color-content-on-action-loading-light};\n  --#{$prefix}color-content-on-action-pressed: #{$ouds-color-content-on-action-pressed-light};\n  --#{$prefix}color-content-on-action-selected: #{$ouds-color-content-on-action-selected-light};\n  --#{$prefix}color-content-on-brand-primary: #{$ouds-color-content-on-brand-primary-light};\n  --#{$prefix}color-content-on-brand-secondary: #{$ouds-color-content-on-brand-secondary-light};\n  --#{$prefix}color-content-on-brand-tertiary: #{$ouds-color-content-on-brand-tertiary-light};\n  --#{$prefix}color-content-on-overlay-emphasized: #{$ouds-color-content-on-overlay-emphasized-light};\n  --#{$prefix}color-content-on-status-accent-emphasized: #{$ouds-color-content-on-status-accent-emphasized-light};\n  --#{$prefix}color-content-on-status-accent-muted: #{$ouds-color-content-on-status-accent-muted-light};\n  --#{$prefix}color-content-on-status-info-emphasized: #{$ouds-color-content-on-status-info-emphasized-light};\n  --#{$prefix}color-content-on-status-info-muted: #{$ouds-color-content-on-status-info-muted-light};\n  --#{$prefix}color-content-on-status-negative-emphasized: #{$ouds-color-content-on-status-negative-emphasized-light};\n  --#{$prefix}color-content-on-status-negative-muted: #{$ouds-color-content-on-status-negative-muted-light};\n  --#{$prefix}color-content-on-status-neutral-emphasized: #{$ouds-color-content-on-status-neutral-emphasized-light};\n  --#{$prefix}color-content-on-status-neutral-muted: #{$ouds-color-content-on-status-neutral-muted-light};\n  --#{$prefix}color-content-on-status-positive-emphasized: #{$ouds-color-content-on-status-positive-emphasized-light};\n  --#{$prefix}color-content-on-status-positive-muted: #{$ouds-color-content-on-status-positive-muted-light};\n  --#{$prefix}color-content-on-status-warning-emphasized: #{$ouds-color-content-on-status-warning-emphasized-light};\n  --#{$prefix}color-content-on-status-warning-muted: #{$ouds-color-content-on-status-warning-muted-light};\n  --#{$prefix}color-content-status-accent: #{$ouds-color-content-status-accent-light};\n  --#{$prefix}color-content-status-info: #{$ouds-color-content-status-info-light};\n  --#{$prefix}color-content-status-negative: #{$ouds-color-content-status-negative-light};\n  --#{$prefix}color-content-status-positive: #{$ouds-color-content-status-positive-light};\n  --#{$prefix}color-content-status-warning: #{$ouds-color-content-status-warning-light};\n  --#{$prefix}color-decorative-brand-primary: #{$ouds-color-decorative-brand-primary};\n  --#{$prefix}color-decorative-brand-secondary: #{$ouds-color-decorative-brand-secondary};\n  --#{$prefix}color-decorative-brand-tertiary: #{$ouds-color-decorative-brand-tertiary};\n  --#{$prefix}color-decorative-neutral-emphasized-low: #{$ouds-color-decorative-neutral-emphasized-low};\n  --#{$prefix}color-decorative-neutral-muted-lower: #{$ouds-color-decorative-neutral-muted-lower};\n  --#{$prefix}color-decorative-neutral-muted-medium: #{$ouds-color-decorative-neutral-muted-medium};\n  --#{$prefix}color-opacity-lower: #{$ouds-color-opacity-lower-light};\n  --#{$prefix}color-opacity-lowest: #{$ouds-color-opacity-lowest-light};\n  --#{$prefix}color-opacity-transparent: #{$ouds-color-opacity-transparent-light};\n  --#{$prefix}color-overlay-default: #{$ouds-color-overlay-default-light};\n  --#{$prefix}color-overlay-drag: #{$ouds-color-overlay-drag-light};\n  --#{$prefix}color-overlay-emphasized: #{$ouds-color-overlay-emphasized-light};\n  --#{$prefix}color-overlay-modal: #{$ouds-color-overlay-modal-light};\n  --#{$prefix}color-surface-brand-primary: #{$ouds-color-surface-brand-primary-light};\n  --#{$prefix}color-surface-brand-secondary: #{$ouds-color-surface-brand-secondary-light};\n  --#{$prefix}color-surface-brand-tertiary: #{$ouds-color-surface-brand-tertiary-light};\n  --#{$prefix}color-surface-status-accent-emphasized: #{$ouds-color-surface-status-accent-emphasized-light};\n  --#{$prefix}color-surface-status-accent-muted: #{$ouds-color-surface-status-accent-muted-light};\n  --#{$prefix}color-surface-status-info-emphasized: #{$ouds-color-surface-status-info-emphasized-light};\n  --#{$prefix}color-surface-status-info-muted: #{$ouds-color-surface-status-info-muted-light};\n  --#{$prefix}color-surface-status-negative-emphasized: #{$ouds-color-surface-status-negative-emphasized-light};\n  --#{$prefix}color-surface-status-negative-muted: #{$ouds-color-surface-status-negative-muted-light};\n  --#{$prefix}color-surface-status-neutral-emphasized: #{$ouds-color-surface-status-neutral-emphasized-light};\n  --#{$prefix}color-surface-status-neutral-muted: #{$ouds-color-surface-status-neutral-muted-light};\n  --#{$prefix}color-surface-status-positive-emphasized: #{$ouds-color-surface-status-positive-emphasized-light};\n  --#{$prefix}color-surface-status-positive-muted: #{$ouds-color-surface-status-positive-muted-light};\n  --#{$prefix}color-surface-status-warning-emphasized: #{$ouds-color-surface-status-warning-emphasized-light};\n  --#{$prefix}color-surface-status-warning-muted: #{$ouds-color-surface-status-warning-muted-light};\n  --#{$prefix}elevation-color-default: #{$ouds-elevation-color-default};\n  --#{$prefix}elevation-color-drag: #{$ouds-elevation-color-drag};\n  --#{$prefix}elevation-color-emphasized: #{$ouds-elevation-color-emphasized};\n  --#{$prefix}elevation-color-none: #{$ouds-elevation-color-none};\n  --#{$prefix}elevation-color-raised: #{$ouds-elevation-color-raised};\n  --#{$prefix}elevation-color-sticky-default: #{$ouds-elevation-color-sticky-default};\n  --#{$prefix}elevation-color-sticky-emphasized: #{$ouds-elevation-color-sticky-emphasized};\n  --#{$prefix}elevation-color-sticky-navigation-scrolled: #{$ouds-elevation-color-sticky-navigation-scrolled};\n}\n// scss-docs-end ouds-semantic-css-color\n\n@include color-mode(dark, true) {\n  --#{$prefix}color-action-disabled: #{$ouds-color-action-disabled-dark};\n  --#{$prefix}color-action-enabled: #{$ouds-color-action-enabled-dark};\n  --#{$prefix}color-action-focus: #{$ouds-color-action-focus-dark};\n  --#{$prefix}color-action-highlighted: #{$ouds-color-action-highlighted-dark};\n  --#{$prefix}color-action-hover: #{$ouds-color-action-hover-dark};\n  --#{$prefix}color-action-loading: #{$ouds-color-action-loading-dark};\n  --#{$prefix}color-action-negative-enabled: #{$ouds-color-action-negative-enabled-dark};\n  --#{$prefix}color-action-negative-focus: #{$ouds-color-action-negative-focus-dark};\n  --#{$prefix}color-action-negative-hover: #{$ouds-color-action-negative-hover-dark};\n  --#{$prefix}color-action-negative-loading: #{$ouds-color-action-negative-loading-dark};\n  --#{$prefix}color-action-negative-pressed: #{$ouds-color-action-negative-pressed-dark};\n  --#{$prefix}color-action-pressed: #{$ouds-color-action-pressed-dark};\n  --#{$prefix}color-action-selected: #{$ouds-color-action-selected-dark};\n  --#{$prefix}color-action-support-disabled: #{$ouds-color-action-support-disabled-dark};\n  --#{$prefix}color-action-support-enabled: #{$ouds-color-action-support-enabled-dark};\n  --#{$prefix}color-action-support-focus: #{$ouds-color-action-support-focus-dark};\n  --#{$prefix}color-action-support-hover: #{$ouds-color-action-support-hover-dark};\n  --#{$prefix}color-action-support-loading: #{$ouds-color-action-support-loading-dark};\n  --#{$prefix}color-action-support-pressed: #{$ouds-color-action-support-pressed-dark};\n  --#{$prefix}color-action-visited: #{$ouds-color-action-visited-dark};\n  --#{$prefix}color-bg-emphasized: #{$ouds-color-bg-emphasized-dark};\n  --#{$prefix}color-bg-primary: #{$ouds-color-bg-primary-dark};\n  --#{$prefix}color-bg-secondary: #{$ouds-color-bg-secondary-dark};\n  --#{$prefix}color-bg-tertiary: #{$ouds-color-bg-tertiary-dark};\n  --#{$prefix}color-border-brand-primary: #{$ouds-color-border-brand-primary-dark};\n  --#{$prefix}color-border-brand-secondary: #{$ouds-color-border-brand-secondary-dark};\n  --#{$prefix}color-border-brand-tertiary: #{$ouds-color-border-brand-tertiary-dark};\n  --#{$prefix}color-border-default: #{$ouds-color-border-default-dark};\n  --#{$prefix}color-border-emphasized: #{$ouds-color-border-emphasized-dark};\n  --#{$prefix}color-border-focus: #{$ouds-color-border-focus-dark};\n  --#{$prefix}color-border-focus-inset: #{$ouds-color-border-focus-inset-dark};\n  --#{$prefix}color-border-muted: #{$ouds-color-border-muted-dark};\n  --#{$prefix}color-border-on-brand-primary: #{$ouds-color-border-on-brand-primary-dark};\n  --#{$prefix}color-border-on-brand-secondary: #{$ouds-color-border-on-brand-secondary-dark};\n  --#{$prefix}color-border-on-brand-tertiary: #{$ouds-color-border-on-brand-tertiary-dark};\n  --#{$prefix}color-content-brand-primary: #{$ouds-color-content-brand-primary-dark};\n  --#{$prefix}color-content-brand-secondary: #{$ouds-color-content-brand-secondary-dark};\n  --#{$prefix}color-content-brand-tertiary: #{$ouds-color-content-brand-tertiary-dark};\n  --#{$prefix}color-content-default: #{$ouds-color-content-default-dark};\n  --#{$prefix}color-content-disabled: #{$ouds-color-content-disabled-dark};\n  --#{$prefix}color-content-muted: #{$ouds-color-content-muted-dark};\n  --#{$prefix}color-content-on-action-disabled: #{$ouds-color-content-on-action-disabled-dark};\n  --#{$prefix}color-content-on-action-enabled: #{$ouds-color-content-on-action-enabled-dark};\n  --#{$prefix}color-content-on-action-focus: #{$ouds-color-content-on-action-focus-dark};\n  --#{$prefix}color-content-on-action-highlighted: #{$ouds-color-content-on-action-highlighted-dark};\n  --#{$prefix}color-content-on-action-hover: #{$ouds-color-content-on-action-hover-dark};\n  --#{$prefix}color-content-on-action-loading: #{$ouds-color-content-on-action-loading-dark};\n  --#{$prefix}color-content-on-action-pressed: #{$ouds-color-content-on-action-pressed-dark};\n  --#{$prefix}color-content-on-action-selected: #{$ouds-color-content-on-action-selected-dark};\n  --#{$prefix}color-content-on-brand-primary: #{$ouds-color-content-on-brand-primary-dark};\n  --#{$prefix}color-content-on-brand-secondary: #{$ouds-color-content-on-brand-secondary-dark};\n  --#{$prefix}color-content-on-brand-tertiary: #{$ouds-color-content-on-brand-tertiary-dark};\n  --#{$prefix}color-content-on-overlay-emphasized: #{$ouds-color-content-on-overlay-emphasized-dark};\n  --#{$prefix}color-content-on-status-accent-emphasized: #{$ouds-color-content-on-status-accent-emphasized-dark};\n  --#{$prefix}color-content-on-status-accent-muted: #{$ouds-color-content-on-status-accent-muted-dark};\n  --#{$prefix}color-content-on-status-info-emphasized: #{$ouds-color-content-on-status-info-emphasized-dark};\n  --#{$prefix}color-content-on-status-info-muted: #{$ouds-color-content-on-status-info-muted-dark};\n  --#{$prefix}color-content-on-status-negative-emphasized: #{$ouds-color-content-on-status-negative-emphasized-dark};\n  --#{$prefix}color-content-on-status-negative-muted: #{$ouds-color-content-on-status-negative-muted-dark};\n  --#{$prefix}color-content-on-status-neutral-emphasized: #{$ouds-color-content-on-status-neutral-emphasized-dark};\n  --#{$prefix}color-content-on-status-neutral-muted: #{$ouds-color-content-on-status-neutral-muted-dark};\n  --#{$prefix}color-content-on-status-positive-emphasized: #{$ouds-color-content-on-status-positive-emphasized-dark};\n  --#{$prefix}color-content-on-status-positive-muted: #{$ouds-color-content-on-status-positive-muted-dark};\n  --#{$prefix}color-content-on-status-warning-emphasized: #{$ouds-color-content-on-status-warning-emphasized-dark};\n  --#{$prefix}color-content-on-status-warning-muted: #{$ouds-color-content-on-status-warning-muted-dark};\n  --#{$prefix}color-content-status-accent: #{$ouds-color-content-status-accent-dark};\n  --#{$prefix}color-content-status-info: #{$ouds-color-content-status-info-dark};\n  --#{$prefix}color-content-status-negative: #{$ouds-color-content-status-negative-dark};\n  --#{$prefix}color-content-status-positive: #{$ouds-color-content-status-positive-dark};\n  --#{$prefix}color-content-status-warning: #{$ouds-color-content-status-warning-dark};\n  --#{$prefix}color-opacity-lower: #{$ouds-color-opacity-lower-dark};\n  --#{$prefix}color-opacity-lowest: #{$ouds-color-opacity-lowest-dark};\n  --#{$prefix}color-opacity-transparent: #{$ouds-color-opacity-transparent-dark};\n  --#{$prefix}color-overlay-default: #{$ouds-color-overlay-default-dark};\n  --#{$prefix}color-overlay-drag: #{$ouds-color-overlay-drag-dark};\n  --#{$prefix}color-overlay-emphasized: #{$ouds-color-overlay-emphasized-dark};\n  --#{$prefix}color-overlay-modal: #{$ouds-color-overlay-modal-dark};\n  --#{$prefix}color-surface-brand-primary: #{$ouds-color-surface-brand-primary-dark};\n  --#{$prefix}color-surface-brand-secondary: #{$ouds-color-surface-brand-secondary-dark};\n  --#{$prefix}color-surface-brand-tertiary: #{$ouds-color-surface-brand-tertiary-dark};\n  --#{$prefix}color-surface-status-accent-emphasized: #{$ouds-color-surface-status-accent-emphasized-dark};\n  --#{$prefix}color-surface-status-accent-muted: #{$ouds-color-surface-status-accent-muted-dark};\n  --#{$prefix}color-surface-status-info-emphasized: #{$ouds-color-surface-status-info-emphasized-dark};\n  --#{$prefix}color-surface-status-info-muted: #{$ouds-color-surface-status-info-muted-dark};\n  --#{$prefix}color-surface-status-negative-emphasized: #{$ouds-color-surface-status-negative-emphasized-dark};\n  --#{$prefix}color-surface-status-negative-muted: #{$ouds-color-surface-status-negative-muted-dark};\n  --#{$prefix}color-surface-status-neutral-emphasized: #{$ouds-color-surface-status-neutral-emphasized-dark};\n  --#{$prefix}color-surface-status-neutral-muted: #{$ouds-color-surface-status-neutral-muted-dark};\n  --#{$prefix}color-surface-status-positive-emphasized: #{$ouds-color-surface-status-positive-emphasized-dark};\n  --#{$prefix}color-surface-status-positive-muted: #{$ouds-color-surface-status-positive-muted-dark};\n  --#{$prefix}color-surface-status-warning-emphasized: #{$ouds-color-surface-status-warning-emphasized-dark};\n  --#{$prefix}color-surface-status-warning-muted: #{$ouds-color-surface-status-warning-muted-dark};\n}\n// scss-docs-end ouds-all-semantic-css-color\n\n$ouds-color-action-disabled: var(--#{$prefix}color-action-disabled) !default;\n$ouds-color-action-enabled: var(--#{$prefix}color-action-enabled) !default;\n$ouds-color-action-focus: var(--#{$prefix}color-action-focus) !default;\n$ouds-color-action-highlighted: var(--#{$prefix}color-action-highlighted) !default;\n$ouds-color-action-hover: var(--#{$prefix}color-action-hover) !default;\n$ouds-color-action-loading: var(--#{$prefix}color-action-loading) !default;\n$ouds-color-action-negative-enabled: var(--#{$prefix}color-action-negative-enabled) !default;\n$ouds-color-action-negative-focus: var(--#{$prefix}color-action-negative-focus) !default;\n$ouds-color-action-negative-hover: var(--#{$prefix}color-action-negative-hover) !default;\n$ouds-color-action-negative-loading: var(--#{$prefix}color-action-negative-loading) !default;\n$ouds-color-action-negative-pressed: var(--#{$prefix}color-action-negative-pressed) !default;\n$ouds-color-action-pressed: var(--#{$prefix}color-action-pressed) !default;\n$ouds-color-action-selected: var(--#{$prefix}color-action-selected) !default;\n$ouds-color-action-support-disabled: var(--#{$prefix}color-action-support-disabled) !default;\n$ouds-color-action-support-enabled: var(--#{$prefix}color-action-support-enabled) !default;\n$ouds-color-action-support-focus: var(--#{$prefix}color-action-support-focus) !default;\n$ouds-color-action-support-hover: var(--#{$prefix}color-action-support-hover) !default;\n$ouds-color-action-support-loading: var(--#{$prefix}color-action-support-loading) !default;\n$ouds-color-action-support-pressed: var(--#{$prefix}color-action-support-pressed) !default;\n$ouds-color-action-visited: var(--#{$prefix}color-action-visited) !default;\n$ouds-color-always-black: var(--#{$prefix}color-always-black) !default;\n$ouds-color-always-on-black: var(--#{$prefix}color-always-on-black) !default;\n$ouds-color-always-on-white: var(--#{$prefix}color-always-on-white) !default;\n$ouds-color-always-white: var(--#{$prefix}color-always-white) !default;\n$ouds-color-bg-emphasized: var(--#{$prefix}color-bg-emphasized) !default;\n$ouds-color-bg-primary: var(--#{$prefix}color-bg-primary) !default;\n$ouds-color-bg-secondary: var(--#{$prefix}color-bg-secondary) !default;\n$ouds-color-bg-tertiary: var(--#{$prefix}color-bg-tertiary) !default;\n$ouds-color-border-brand-primary: var(--#{$prefix}color-border-brand-primary) !default;\n$ouds-color-border-brand-secondary: var(--#{$prefix}color-border-brand-secondary) !default;\n$ouds-color-border-brand-tertiary: var(--#{$prefix}color-border-brand-tertiary) !default;\n$ouds-color-border-default: var(--#{$prefix}color-border-default) !default;\n$ouds-color-border-emphasized: var(--#{$prefix}color-border-emphasized) !default;\n$ouds-color-border-focus-inset: var(--#{$prefix}color-border-focus-inset) !default;\n$ouds-color-border-focus: var(--#{$prefix}color-border-focus) !default;\n$ouds-color-border-muted: var(--#{$prefix}color-border-muted) !default;\n$ouds-color-border-on-brand-primary: var(--#{$prefix}color-border-on-brand-primary) !default;\n$ouds-color-border-on-brand-secondary: var(--#{$prefix}color-border-on-brand-secondary) !default;\n$ouds-color-border-on-brand-tertiary: var(--#{$prefix}color-border-on-brand-tertiary) !default;\n$ouds-color-content-brand-primary: var(--#{$prefix}color-content-brand-primary) !default;\n$ouds-color-content-brand-secondary: var(--#{$prefix}color-content-brand-secondary) !default;\n$ouds-color-content-brand-tertiary: var(--#{$prefix}color-content-brand-tertiary) !default;\n$ouds-color-content-default: var(--#{$prefix}color-content-default) !default;\n$ouds-color-content-disabled: var(--#{$prefix}color-content-disabled) !default;\n$ouds-color-content-muted: var(--#{$prefix}color-content-muted) !default;\n$ouds-color-content-on-action-disabled: var(--#{$prefix}color-content-on-action-disabled) !default;\n$ouds-color-content-on-action-enabled: var(--#{$prefix}color-content-on-action-enabled) !default;\n$ouds-color-content-on-action-focus: var(--#{$prefix}color-content-on-action-focus) !default;\n$ouds-color-content-on-action-highlighted: var(--#{$prefix}color-content-on-action-highlighted) !default;\n$ouds-color-content-on-action-hover: var(--#{$prefix}color-content-on-action-hover) !default;\n$ouds-color-content-on-action-loading: var(--#{$prefix}color-content-on-action-loading) !default;\n$ouds-color-content-on-action-pressed: var(--#{$prefix}color-content-on-action-pressed) !default;\n$ouds-color-content-on-action-selected: var(--#{$prefix}color-content-on-action-selected) !default;\n$ouds-color-content-on-brand-primary: var(--#{$prefix}color-content-on-brand-primary) !default;\n$ouds-color-content-on-brand-secondary: var(--#{$prefix}color-content-on-brand-secondary) !default;\n$ouds-color-content-on-brand-tertiary: var(--#{$prefix}color-content-on-brand-tertiary) !default;\n$ouds-color-content-on-overlay-emphasized: var(--#{$prefix}color-content-on-overlay-emphasized) !default;\n$ouds-color-content-on-status-accent-emphasized: var(--#{$prefix}color-content-on-status-accent-emphasized) !default;\n$ouds-color-content-on-status-accent-muted: var(--#{$prefix}color-content-on-status-accent-muted) !default;\n$ouds-color-content-on-status-info-emphasized: var(--#{$prefix}color-content-on-status-info-emphasized) !default;\n$ouds-color-content-on-status-info-muted: var(--#{$prefix}color-content-on-status-info-muted) !default;\n$ouds-color-content-on-status-negative-emphasized: var(--#{$prefix}color-content-on-status-negative-emphasized) !default;\n$ouds-color-content-on-status-negative-muted: var(--#{$prefix}color-content-on-status-negative-muted) !default;\n$ouds-color-content-on-status-neutral-emphasized: var(--#{$prefix}color-content-on-status-neutral-emphasized) !default;\n$ouds-color-content-on-status-neutral-muted: var(--#{$prefix}color-content-on-status-neutral-muted) !default;\n$ouds-color-content-on-status-positive-emphasized: var(--#{$prefix}color-content-on-status-positive-emphasized) !default;\n$ouds-color-content-on-status-positive-muted: var(--#{$prefix}color-content-on-status-positive-muted) !default;\n$ouds-color-content-on-status-warning-emphasized: var(--#{$prefix}color-content-on-status-warning-emphasized) !default;\n$ouds-color-content-on-status-warning-muted: var(--#{$prefix}color-content-on-status-warning-muted) !default;\n$ouds-color-content-status-accent: var(--#{$prefix}color-content-status-accent) !default;\n$ouds-color-content-status-info: var(--#{$prefix}color-content-status-info) !default;\n$ouds-color-content-status-negative: var(--#{$prefix}color-content-status-negative) !default;\n$ouds-color-content-status-positive: var(--#{$prefix}color-content-status-positive) !default;\n$ouds-color-content-status-warning: var(--#{$prefix}color-content-status-warning) !default;\n$ouds-color-decorative-brand-primary: var(--#{$prefix}color-decorative-brand-primary) !default;\n$ouds-color-decorative-brand-secondary: var(--#{$prefix}color-decorative-brand-secondary) !default;\n$ouds-color-decorative-brand-tertiary: var(--#{$prefix}color-decorative-brand-tertiary) !default;\n$ouds-color-decorative-neutral-emphasized-low: var(--#{$prefix}color-decorative-neutral-emphasized-low) !default;\n$ouds-color-decorative-neutral-muted-lower: var(--#{$prefix}color-decorative-neutral-muted-lower) !default;\n$ouds-color-decorative-neutral-muted-medium: var(--#{$prefix}color-decorative-neutral-muted-medium) !default;\n$ouds-color-opacity-lower: var(--#{$prefix}color-opacity-lower) !default;\n$ouds-color-opacity-lowest: var(--#{$prefix}color-opacity-lowest) !default;\n$ouds-color-opacity-transparent: var(--#{$prefix}color-opacity-transparent) !default;\n$ouds-color-overlay-default: var(--#{$prefix}color-overlay-default) !default;\n$ouds-color-overlay-drag: var(--#{$prefix}color-overlay-drag) !default;\n$ouds-color-overlay-emphasized: var(--#{$prefix}color-overlay-emphasized) !default;\n$ouds-color-overlay-modal: var(--#{$prefix}color-overlay-modal) !default;\n$ouds-color-surface-brand-primary: var(--#{$prefix}color-surface-brand-primary) !default;\n$ouds-color-surface-brand-secondary: var(--#{$prefix}color-surface-brand-secondary) !default;\n$ouds-color-surface-brand-tertiary: var(--#{$prefix}color-surface-brand-tertiary) !default;\n$ouds-color-surface-status-accent-emphasized: var(--#{$prefix}color-surface-status-accent-emphasized) !default;\n$ouds-color-surface-status-accent-muted: var(--#{$prefix}color-surface-status-accent-muted) !default;\n$ouds-color-surface-status-info-emphasized: var(--#{$prefix}color-surface-status-info-emphasized) !default;\n$ouds-color-surface-status-info-muted: var(--#{$prefix}color-surface-status-info-muted) !default;\n$ouds-color-surface-status-negative-emphasized: var(--#{$prefix}color-surface-status-negative-emphasized) !default;\n$ouds-color-surface-status-negative-muted: var(--#{$prefix}color-surface-status-negative-muted) !default;\n$ouds-color-surface-status-neutral-emphasized: var(--#{$prefix}color-surface-status-neutral-emphasized) !default;\n$ouds-color-surface-status-neutral-muted: var(--#{$prefix}color-surface-status-neutral-muted) !default;\n$ouds-color-surface-status-positive-emphasized: var(--#{$prefix}color-surface-status-positive-emphasized) !default;\n$ouds-color-surface-status-positive-muted: var(--#{$prefix}color-surface-status-positive-muted) !default;\n$ouds-color-surface-status-warning-emphasized: var(--#{$prefix}color-surface-status-warning-emphasized) !default;\n$ouds-color-surface-status-warning-muted: var(--#{$prefix}color-surface-status-warning-muted) !default;\n$ouds-elevation-color-default: var(--#{$prefix}elevation-color-default) !default;\n$ouds-elevation-color-drag: var(--#{$prefix}elevation-color-drag) !default;\n$ouds-elevation-color-emphasized: var(--#{$prefix}elevation-color-emphasized) !default;\n$ouds-elevation-color-none: var(--#{$prefix}elevation-color-none) !default;\n$ouds-elevation-color-raised: var(--#{$prefix}elevation-color-raised) !default;\n$ouds-elevation-color-sticky-default: var(--#{$prefix}elevation-color-sticky-default) !default;\n$ouds-elevation-color-sticky-emphasized: var(--#{$prefix}elevation-color-sticky-emphasized) !default;\n$ouds-elevation-color-sticky-navigation-scrolled: var(--#{$prefix}elevation-color-sticky-navigation-scrolled) !default;\n","// Components custom properties applications\n// OUDS Core tokens version 1.5.0\n// Sosh Core tokens version 1.1.0\n// Sosh System tokens version 1.5.0\n\n// scss-docs-start ouds-all-component-css-color\n// scss-docs-start ouds-component-css-color\n@include color-mode(light, true) {\n  --#{$prefix}button-mono-color-bg-default-hover: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-default-pressed: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-default-loading: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-default-focus: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-strong-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-bg-strong-hover: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-strong-pressed: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-strong-loading: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-strong-disabled: #{$core-ouds-color-opacity-black-280};\n  --#{$prefix}button-mono-color-bg-strong-focus: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-minimal-hover: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-minimal-pressed: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-minimal-focus: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-content-default-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-default-hover: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-default-pressed: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-default-loading: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-default-disabled: #{$core-ouds-color-opacity-black-280};\n  --#{$prefix}button-mono-color-content-default-focus: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-strong-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-strong-hover: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-strong-pressed: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-strong-loading: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-strong-disabled: #{$core-ouds-color-opacity-white-640};\n  --#{$prefix}button-mono-color-content-strong-focus: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-minimal-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-minimal-hover: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-minimal-pressed: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-minimal-loading: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-minimal-disabled: #{$core-ouds-color-opacity-black-280};\n  --#{$prefix}button-mono-color-content-minimal-focus: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-border-default-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-border-default-disabled: #{$core-ouds-color-opacity-black-280};\n  --#{$prefix}button-social-color-bg-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-social-color-bg-hover: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-social-color-bg-pressed: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-social-color-bg-focus: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}link-mono-color-content-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}link-mono-color-content-hover: #{$core-ouds-color-functional-black};\n  --#{$prefix}link-mono-color-content-pressed: #{$core-ouds-color-opacity-black-520};\n  --#{$prefix}link-mono-color-content-disabled: #{$core-ouds-color-opacity-black-280};\n  --#{$prefix}link-mono-color-content-focus: #{$core-ouds-color-functional-black};\n  --#{$prefix}switch-color-cursor: #{$core-ouds-color-functional-white};\n  --#{$prefix}switch-color-track-selected: #{$core-ouds-color-functional-malachite-500};\n  --#{$prefix}switch-color-track-selected-interaction: #{$core-ouds-color-functional-malachite-600};\n  --#{$prefix}switch-color-track-unselected: #{$core-ouds-color-opacity-black-440};\n  --#{$prefix}switch-color-track-unselected-interaction: #{$core-ouds-color-opacity-black-520};\n  --#{$prefix}link-color-chevron-hover: #{$ouds-color-content-brand-primary-light};\n}\n// scss-docs-end ouds-component-css-color\n\n@include color-mode(dark, true) {\n  --#{$prefix}button-mono-color-bg-default-hover: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-default-pressed: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-default-loading: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-default-focus: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-strong-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-bg-strong-hover: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-strong-pressed: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-strong-loading: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-strong-disabled: #{$core-ouds-color-opacity-white-440};\n  --#{$prefix}button-mono-color-bg-strong-focus: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-minimal-hover: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-bg-minimal-pressed: #{$core-ouds-color-opacity-black-680};\n  --#{$prefix}button-mono-color-bg-minimal-focus: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}button-mono-color-content-default-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-default-hover: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-default-pressed: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-default-loading: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-default-disabled: #{$core-ouds-color-opacity-white-440};\n  --#{$prefix}button-mono-color-content-default-focus: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-strong-enabled: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-strong-hover: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-strong-pressed: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-strong-loading: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-strong-disabled: #{$core-ouds-color-opacity-black-440};\n  --#{$prefix}button-mono-color-content-strong-focus: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-minimal-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-minimal-hover: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-content-minimal-pressed: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-minimal-loading: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-content-minimal-disabled: #{$core-ouds-color-opacity-white-440};\n  --#{$prefix}button-mono-color-content-minimal-focus: #{$core-ouds-color-functional-black};\n  --#{$prefix}button-mono-color-border-default-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-mono-color-border-default-disabled: #{$core-ouds-color-opacity-white-440};\n  --#{$prefix}button-social-color-bg-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}button-social-color-bg-hover: #{$core-ouds-color-opacity-white-640};\n  --#{$prefix}button-social-color-bg-pressed: #{$core-ouds-color-opacity-white-640};\n  --#{$prefix}button-social-color-bg-focus: #{$core-ouds-color-opacity-white-640};\n  --#{$prefix}link-mono-color-content-enabled: #{$core-ouds-color-functional-white};\n  --#{$prefix}link-mono-color-content-hover: #{$core-ouds-color-functional-white};\n  --#{$prefix}link-mono-color-content-pressed: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}link-mono-color-content-disabled: #{$core-ouds-color-opacity-white-440};\n  --#{$prefix}link-mono-color-content-focus: #{$core-ouds-color-functional-white};\n  --#{$prefix}switch-color-cursor: #{$core-ouds-color-functional-gray-dark-880};\n  --#{$prefix}switch-color-track-selected: #{$core-ouds-color-functional-malachite-600};\n  --#{$prefix}switch-color-track-selected-interaction: #{$core-ouds-color-functional-malachite-300};\n  --#{$prefix}switch-color-track-unselected: #{$core-ouds-color-opacity-white-640};\n  --#{$prefix}switch-color-track-unselected-interaction: #{$core-ouds-color-opacity-white-800};\n  --#{$prefix}link-color-chevron-hover: #{$ouds-color-action-enabled-dark};\n}\n// scss-docs-end ouds-all-component-css-color\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-container-classes {\n  // OUDS mod: `.container` selector is conditionally handle whenever `$enable-bootstrap-compatibility` is true\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  @if $enable-bootstrap-compatibility { // OUDS mod\n    // OUDS mod\n    // Single container class with breakpoint max-widths\n    .container {\n      @include make-container();\n    }\n    // End mod\n\n    // Responsive containers that are 100% wide until a breakpoint\n    @each $breakpoint, $container-max-width in $container-max-widths {\n      // OUDS mod: link 2xl breakpoint to xxl\n      @if $breakpoint == 2xl {\n        .container-xxl {\n          @extend .container-fluid;\n        }\n      }\n      // End mod\n\n      .container-#{$breakpoint} {\n        @extend .container-fluid;\n      }\n\n      @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n        %responsive-container-#{$breakpoint} {\n          max-width: $container-max-width;\n        }\n\n        // Extend each breakpoint which is smaller or equal to the current breakpoint\n        $extend-breakpoint: true;\n\n        @each $name, $width in $grid-breakpoints {\n          @if ($extend-breakpoint) {\n            .container#{breakpoint-infix($name, $grid-breakpoints)} {\n              @extend %responsive-container-#{$breakpoint};\n            }\n\n            // Once the current breakpoint is reached, stop extending\n            @if ($breakpoint == $name) {\n              $extend-breakpoint: false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // OUDS mod\n  // scss-docs-start containers-max\n  .container-max-width {\n    @include media-breakpoint-up(get-breakpoint-from-width()) {\n      --#{$prefix}container-margin-x: #{map-get($container-fluid-margin, get-breakpoint-from-width())};\n      max-width: $ouds-grid-2xl-max-width-alt;\n\n      .row {\n        --#{$prefix}gutter-x: #{map-get($grid-gutter-widths, get-breakpoint-from-width())};\n      }\n    }\n  }\n  // scss-docs-end containers-max\n  // End mod\n}\n","// Container mixins\n\n// scss-docs-start container-mixins\n@mixin make-container($gutter: $container-padding-x) {\n  // OUDS mod: no CSS variable gutter definition inside containers\n  width: 100%;\n  padding-right: var(--#{$prefix}container-margin-x); // OUDS mod: instead of `calc(var(--#{$prefix}gutter-x) * .5)`\n  padding-left: var(--#{$prefix}container-margin-x); // OUDS mod: instead of `calc(var(--#{$prefix}gutter-x) * .5)`\n  margin-right: auto;\n  margin-left: auto;\n\n  // OUDS mod: gutter depends on breakpoints\n  @each $breakpoint, $container-fluid-marg in $container-fluid-margin {\n    @include media-breakpoint-up($breakpoint) {\n      --#{$prefix}container-margin-x: #{$container-fluid-marg};\n    }\n  }\n  // End mod\n}\n// scss-docs-end container-mixins\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (2xs xs sm md lg xl 2xl 3xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px))\n//    736px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px))\n//    735.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(2xs, (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (2xs: 0, xs: 390px, sm: 480px, md: 736px, lg: 1024px, xl: 1320px, 2xl: 1640px, 3xl: 1880px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// OUDS mod\n// Get the breakpoint infix corresponding to a given width\n@function get-breakpoint-from-width($width: $ouds-grid-2xl-max-width-alt, $breakpoints: $grid-breakpoints) {\n  $breakpoint-infix: \"\";\n  @each $infix, $value in $grid-breakpoints {\n    @if $width >= $value {\n      $breakpoint-infix: $infix;\n    }\n  }\n  @return $breakpoint-infix;\n}\n// End mod\n","// Raw primitive values\n// Insertion of brand foundations\n// OUDS Core tokens version 1.5.0\n// Sosh Core tokens version 1.1.0\n// Sosh System tokens version 1.5.0\n\n// Border\n\n// scss-docs-start ouds-raw-border\n$core-ouds-border-base: 4px !default;\n$core-ouds-border-radius-9999: 2000px !default;\n$core-ouds-border-style-dashed: dashed !default;\n// $core-ouds-border-style-dotted: dotted !default;\n// $core-ouds-border-style-none: none !default;\n$core-ouds-border-style-solid: solid !default;\n$core-ouds-border-radius-0: $core-ouds-border-base * 0 !default; // 0px\n// $core-ouds-border-radius-25: $core-ouds-border-base * .25 !default; // 1px\n// $core-ouds-border-radius-50: $core-ouds-border-base * .5 !default; // 2px\n// $core-ouds-border-radius-75: $core-ouds-border-base * .75 !default; // 3px\n$core-ouds-border-radius-100: $core-ouds-border-base * 1 !default; // 4px\n$core-ouds-border-radius-150: $core-ouds-border-base * 1.5 !default; // 6px\n$core-ouds-border-radius-200: $core-ouds-border-base * 2 !default; // 8px\n$core-ouds-border-radius-300: $core-ouds-border-base * 3 !default; // 12px\n// $core-ouds-border-radius-400: $core-ouds-border-base * 4 !default; // 16px\n// $core-ouds-border-radius-500: $core-ouds-border-base * 5 !default; // 20px\n// $core-ouds-border-radius-600: $core-ouds-border-base * 6 !default; // 24px\n// $core-ouds-border-radius-800: $core-ouds-border-base * 8 !default; // 32px\n$core-ouds-border-width-0: $core-ouds-border-base * 0 !default; // 0px\n$core-ouds-border-width-25: $core-ouds-border-base * .25 !default; // 1px\n$core-ouds-border-width-50: $core-ouds-border-base * .5 !default; // 2px\n$core-ouds-border-width-75: $core-ouds-border-base * .75 !default; // 3px\n$core-ouds-border-width-100: $core-ouds-border-base * 1 !default; // 4px\n$core-ouds-border-width-125: $core-ouds-border-base * 1.25 !default; // 5px\n$core-ouds-border-width-150: $core-ouds-border-base * 1.5 !default; // 6px\n// $core-ouds-border-width-200: $core-ouds-border-base * 2 !default; // 8px\n// scss-docs-end ouds-raw-border\n\n// Color\n\n// scss-docs-start ouds-raw-color\n// $core-orange-color-decorative-amber-100: #fff0cc !default;\n// $core-orange-color-decorative-amber-200: #ffe199 !default;\n// $core-orange-color-decorative-amber-300: #ffd266 !default;\n// $core-orange-color-decorative-amber-400: #ffc333 !default;\n$core-orange-color-decorative-amber-500: #ffb400 !default;\n// $core-orange-color-decorative-amber-600: #cc9000 !default;\n// $core-orange-color-decorative-amber-700: #996c00 !default;\n// $core-orange-color-decorative-amber-800: #664800 !default;\n// $core-orange-color-decorative-amber-900: #332400 !default;\n$core-orange-color-decorative-amethyst-100: #f1ecf9 !default;\n$core-orange-color-decorative-amethyst-200: #e0d4f2 !default;\n$core-orange-color-decorative-amethyst-300: #c5ade6 !default;\n$core-orange-color-decorative-amethyst-400: #a885d8 !default;\n$core-orange-color-decorative-amethyst-500: #8d60cd !default;\n$core-orange-color-decorative-amethyst-600: #5b2f98 !default;\n$core-orange-color-decorative-amethyst-700: #432371 !default;\n$core-orange-color-decorative-amethyst-800: #2c174a !default;\n$core-orange-color-decorative-amethyst-900: #150b23 !default;\n$core-orange-color-decorative-deep-peach-100: #fbebdf !default;\n$core-orange-color-decorative-deep-peach-200: #f4cfb2 !default;\n$core-orange-color-decorative-deep-peach-300: #e3b591 !default;\n$core-orange-color-decorative-deep-peach-400: #c19372 !default;\n$core-orange-color-decorative-deep-peach-500: #cf7e3f !default;\n$core-orange-color-decorative-deep-peach-600: #aa6631 !default;\n$core-orange-color-decorative-deep-peach-700: #7e4f2a !default;\n$core-orange-color-decorative-deep-peach-800: #553720 !default;\n$core-orange-color-decorative-deep-peach-900: #2e2014 !default;\n$core-orange-color-decorative-emerald-100: #e5f5ed !default;\n$core-orange-color-decorative-emerald-200: #c0e8d4 !default;\n$core-orange-color-decorative-emerald-300: #9bdaba !default;\n$core-orange-color-decorative-emerald-400: #75cca1 !default;\n$core-orange-color-decorative-emerald-500: #50be87 !default;\n$core-orange-color-decorative-emerald-600: #3ba06e !default;\n$core-orange-color-decorative-emerald-700: #2e7b54 !default;\n$core-orange-color-decorative-emerald-800: #20563b !default;\n$core-orange-color-decorative-emerald-900: #123021 !default;\n$core-orange-color-decorative-shocking-pink-100: #ffe5f6 !default;\n$core-orange-color-decorative-shocking-pink-200: #ffb4e6 !default;\n$core-orange-color-decorative-shocking-pink-300: #ff80d4 !default;\n$core-orange-color-decorative-shocking-pink-400: #ff4dc3 !default;\n$core-orange-color-decorative-shocking-pink-500: #ff1ab2 !default;\n$core-orange-color-decorative-shocking-pink-600: #e50099 !default;\n$core-orange-color-decorative-shocking-pink-700: #b20077 !default;\n$core-orange-color-decorative-shocking-pink-800: #800055 !default;\n$core-orange-color-decorative-shocking-pink-900: #4d0033 !default;\n$core-orange-color-decorative-sky-100: #d2ecf9 !default;\n$core-orange-color-decorative-sky-200: #a5daf3 !default;\n$core-orange-color-decorative-sky-300: #79c7ec !default;\n$core-orange-color-decorative-sky-400: #4ab4e6 !default;\n$core-orange-color-decorative-sky-500: #1fa2e0 !default;\n$core-orange-color-decorative-sky-600: #1982b3 !default;\n$core-orange-color-decorative-sky-700: #136186 !default;\n$core-orange-color-decorative-sky-800: #0c415a !default;\n$core-orange-color-decorative-sky-900: #06202d !default;\n$core-orange-color-opacity-warm-gray: rgba(189, 121, 60, .08) !default;\n// $core-orange-color-orange-50: #fff2e6 !default;\n$core-orange-color-orange-100: #ffd5b0 !default;\n$core-orange-color-orange-200: #ffc18a !default;\n$core-orange-color-orange-300: #ffa554 !default;\n$core-orange-color-orange-400: #ff9433 !default;\n$core-orange-color-orange-500: #ff7900 !default;\n$core-orange-color-orange-550: #f15e00 !default;\n$core-orange-color-orange-600: #e86e00 !default;\n$core-orange-color-orange-700: #b55600 !default;\n$core-orange-color-orange-800: #8c4300 !default;\n$core-orange-color-orange-900: #6b3300 !default;\n$core-orange-color-warm-gray-100: #f9f5f0 !default;\n// $core-orange-color-warm-gray-200: #e9ddce !default;\n// $core-orange-color-warm-gray-300: #d6c4ae !default;\n// $core-orange-color-warm-gray-400: #c1ab90 !default;\n// $core-orange-color-warm-gray-500: #a99275 !default;\n// $core-orange-color-warm-gray-600: #8a7860 !default;\n// $core-orange-color-warm-gray-700: #685d50 !default;\n// $core-orange-color-warm-gray-800: #48433d !default;\n$core-orange-color-warm-gray-900: #353228 !default;\n$core-orange-color-warm-gray-1000: #23211a !default;\n$core-ouds-color-functional-amethyst-400: #a885d8 !default;\n$core-ouds-color-functional-amethyst-600: #5b2f98 !default;\n$core-ouds-color-functional-black: #000 !default;\n$core-ouds-color-functional-dodger-blue-100: #f0faff !default;\n$core-ouds-color-functional-dodger-blue-200: #bde7ff !default;\n$core-ouds-color-functional-dodger-blue-300: #8ad5ff !default;\n$core-ouds-color-functional-dodger-blue-400: #57c3ff !default;\n$core-ouds-color-functional-dodger-blue-500: #26b2ff !default;\n$core-ouds-color-functional-dodger-blue-600: #009bf0 !default;\n$core-ouds-color-functional-dodger-blue-700: #007abd !default;\n$core-ouds-color-functional-dodger-blue-800: #00598a !default;\n$core-ouds-color-functional-dodger-blue-900: #003857 !default;\n// $core-ouds-color-functional-gray-dark-80: #7a7a7a !default;\n// $core-ouds-color-functional-gray-dark-160: #707070 !default;\n$core-ouds-color-functional-gray-dark-240: #666 !default;\n$core-ouds-color-functional-gray-dark-320: #5c5c5c !default;\n$core-ouds-color-functional-gray-dark-400: #555 !default;\n// $core-ouds-color-functional-gray-dark-480: #444 !default;\n// $core-ouds-color-functional-gray-dark-560: #3d3d3d !default;\n$core-ouds-color-functional-gray-dark-640: #333 !default;\n$core-ouds-color-functional-gray-dark-720: #272727 !default;\n$core-ouds-color-functional-gray-dark-800: #1f1f1f !default;\n$core-ouds-color-functional-gray-dark-880: #141414 !default;\n// $core-ouds-color-functional-gray-dark-960: #0a0a0a !default;\n$core-ouds-color-functional-gray-light-80: #f4f4f4 !default;\n$core-ouds-color-functional-gray-light-160: #eee !default;\n$core-ouds-color-functional-gray-light-240: #e0e0e0 !default;\n$core-ouds-color-functional-gray-light-320: #d6d6d6 !default;\n$core-ouds-color-functional-gray-light-400: #ccc !default;\n// $core-ouds-color-functional-gray-light-480: #c2c2c2 !default;\n// $core-ouds-color-functional-gray-light-560: #bbb !default;\n// $core-ouds-color-functional-gray-light-640: #adadad !default;\n// $core-ouds-color-functional-gray-light-720: #a3a3a3 !default;\n$core-ouds-color-functional-gray-light-800: #999 !default;\n// $core-ouds-color-functional-gray-light-880: #8f8f8f !default;\n$core-ouds-color-functional-gray-light-960: #858585 !default;\n$core-ouds-color-functional-malachite-100: #edfcf0 !default;\n$core-ouds-color-functional-malachite-200: #c1f6ca !default;\n$core-ouds-color-functional-malachite-300: #94f0a4 !default;\n$core-ouds-color-functional-malachite-400: #67e97e !default;\n$core-ouds-color-functional-malachite-500: #3de35a !default;\n$core-ouds-color-functional-malachite-600: #1ecd3c !default;\n$core-ouds-color-functional-malachite-700: #17a02f !default;\n$core-ouds-color-functional-malachite-800: #0e621d !default;\n$core-ouds-color-functional-malachite-900: #0a4715 !default;\n$core-ouds-color-functional-scarlet-100: #ffe5e6 !default;\n$core-ouds-color-functional-scarlet-200: #ffb2b3 !default;\n$core-ouds-color-functional-scarlet-300: #ff8081 !default;\n$core-ouds-color-functional-scarlet-400: #ff4d4e !default;\n$core-ouds-color-functional-scarlet-500: #ff1a1b !default;\n$core-ouds-color-functional-scarlet-600: #db0002 !default;\n$core-ouds-color-functional-scarlet-700: #b20002 !default;\n$core-ouds-color-functional-scarlet-800: #800001 !default;\n$core-ouds-color-functional-scarlet-900: #4d0001 !default;\n$core-ouds-color-functional-sun-100: #fff7d6 !default;\n$core-ouds-color-functional-sun-200: #ffed99 !default;\n$core-ouds-color-functional-sun-300: #ffe270 !default;\n$core-ouds-color-functional-sun-400: #ffd73d !default;\n$core-ouds-color-functional-sun-500: #ffd000 !default;\n$core-ouds-color-functional-sun-600: #d6aa00 !default;\n$core-ouds-color-functional-sun-700: #a38200 !default;\n$core-ouds-color-functional-sun-800: #665100 !default;\n$core-ouds-color-functional-sun-900: #3d3100 !default;\n$core-ouds-color-functional-white: #fff !default;\n$core-ouds-color-opacity-black-0: rgba(0, 0, 0, 0) !default;\n$core-ouds-color-opacity-black-40: rgba(0, 0, 0, .04) !default;\n$core-ouds-color-opacity-black-80: rgba(0, 0, 0, .08) !default;\n$core-ouds-color-opacity-black-120: rgba(0, 0, 0, .12) !default;\n$core-ouds-color-opacity-black-160: rgba(0, 0, 0, .16) !default;\n$core-ouds-color-opacity-black-200: rgba(0, 0, 0, .2) !default;\n$core-ouds-color-opacity-black-240: rgba(0, 0, 0, .24) !default;\n$core-ouds-color-opacity-black-280: rgba(0, 0, 0, .28) !default;\n$core-ouds-color-opacity-black-320: rgba(0, 0, 0, .32) !default;\n// $core-ouds-color-opacity-black-360: rgba(0, 0, 0, .36) !default;\n// $core-ouds-color-opacity-black-400: rgba(0, 0, 0, .4) !default;\n$core-ouds-color-opacity-black-440: rgba(0, 0, 0, .44) !default;\n// $core-ouds-color-opacity-black-480: rgba(0, 0, 0, .48) !default;\n$core-ouds-color-opacity-black-520: rgba(0, 0, 0, .52) !default;\n// $core-ouds-color-opacity-black-560: rgba(0, 0, 0, .56) !default;\n// $core-ouds-color-opacity-black-600: rgba(0, 0, 0, .6) !default;\n// $core-ouds-color-opacity-black-640: rgba(0, 0, 0, .64) !default;\n$core-ouds-color-opacity-black-680: rgba(0, 0, 0, .68) !default;\n// $core-ouds-color-opacity-black-720: rgba(0, 0, 0, .72) !default;\n// $core-ouds-color-opacity-black-760: rgba(0, 0, 0, .76) !default;\n// $core-ouds-color-opacity-black-800: rgba(0, 0, 0, .8) !default;\n$core-ouds-color-opacity-black-840: rgba(0, 0, 0, .84) !default;\n// $core-ouds-color-opacity-black-880: rgba(0, 0, 0, .88) !default;\n// $core-ouds-color-opacity-black-920: rgba(0, 0, 0, .92) !default;\n// $core-ouds-color-opacity-black-960: rgba(0, 0, 0, .96) !default;\n$core-ouds-color-opacity-dodger-blue: rgba(38, 178, 255, .08) !default;\n$core-ouds-color-opacity-malachite: rgba(61, 227, 90, .12) !default;\n$core-ouds-color-opacity-scarlet: rgba(234, 3, 5, .08) !default;\n$core-ouds-color-opacity-sun: rgba(255, 208, 0, .16) !default;\n$core-ouds-color-opacity-white-0: rgba(255, 255, 255, 0) !default;\n$core-ouds-color-opacity-white-40: rgba(255, 255, 255, .04) !default;\n$core-ouds-color-opacity-white-80: rgba(255, 255, 255, .08) !default;\n$core-ouds-color-opacity-white-120: rgba(255, 255, 255, .12) !default;\n// $core-ouds-color-opacity-white-160: rgba(255, 255, 255, .16) !default;\n$core-ouds-color-opacity-white-200: rgba(255, 255, 255, .2) !default;\n// $core-ouds-color-opacity-white-240: rgba(255, 255, 255, .24) !default;\n// $core-ouds-color-opacity-white-280: rgba(255, 255, 255, .28) !default;\n// $core-ouds-color-opacity-white-320: rgba(255, 255, 255, .32) !default;\n// $core-ouds-color-opacity-white-360: rgba(255, 255, 255, .36) !default;\n// $core-ouds-color-opacity-white-400: rgba(255, 255, 255, .4) !default;\n$core-ouds-color-opacity-white-440: rgba(255, 255, 255, .44) !default;\n// $core-ouds-color-opacity-white-480: rgba(255, 255, 255, .48) !default;\n// $core-ouds-color-opacity-white-520: rgba(255, 255, 255, .52) !default;\n// $core-ouds-color-opacity-white-560: rgba(255, 255, 255, .56) !default;\n// $core-ouds-color-opacity-white-600: rgba(255, 255, 255, .6) !default;\n$core-ouds-color-opacity-white-640: rgba(255, 255, 255, .64) !default;\n// $core-ouds-color-opacity-white-680: rgba(255, 255, 255, .68) !default;\n// $core-ouds-color-opacity-white-720: rgba(255, 255, 255, .72) !default;\n// $core-ouds-color-opacity-white-760: rgba(255, 255, 255, .76) !default;\n$core-ouds-color-opacity-white-800: rgba(255, 255, 255, .8) !default;\n// $core-ouds-color-opacity-white-840: rgba(255, 255, 255, .84) !default;\n// $core-ouds-color-opacity-white-880: rgba(255, 255, 255, .88) !default;\n$core-ouds-color-opacity-white-920: rgba(255, 255, 255, .92) !default;\n// $core-ouds-color-opacity-white-960: rgba(255, 255, 255, .96) !default;\n// $core-sosh-color-blue-duck-dark-80: #33b1c1 !default;\n// $core-sosh-color-blue-duck-dark-160: #2fa3b1 !default;\n// $core-sosh-color-blue-duck-dark-240: #2b94a1 !default;\n// $core-sosh-color-blue-duck-dark-320: #26828e !default;\n$core-sosh-color-blue-duck-dark-400: #247a85 !default;\n// $core-sosh-color-blue-duck-dark-480: #1e6771 !default;\n// $core-sosh-color-blue-duck-dark-560: #1a5961 !default;\n// $core-sosh-color-blue-duck-dark-640: #154a51 !default;\n$core-sosh-color-blue-duck-dark-720: #113b40 !default;\n// $core-sosh-color-blue-duck-dark-800: #0e2f34 !default;\n$core-sosh-color-blue-duck-dark-880: #0b2428 !default;\n$core-sosh-color-blue-duck-dark-960: #061618 !default;\n$core-sosh-color-blue-duck-light-80: #f0f7fa !default;\n// $core-sosh-color-blue-duck-light-160: #dff4f6 !default;\n// $core-sosh-color-blue-duck-light-240: #cfeef2 !default;\n// $core-sosh-color-blue-duck-light-320: #bfe8ee !default;\n// $core-sosh-color-blue-duck-light-400: #aee3ea !default;\n$core-sosh-color-blue-duck-light-480: #9edde5 !default;\n// $core-sosh-color-blue-duck-light-560: #8ed8e1 !default;\n// $core-sosh-color-blue-duck-light-640: #7ed2dd !default;\n// $core-sosh-color-blue-duck-light-720: #6eccd8 !default;\n$core-sosh-color-blue-duck-light-800: #5ec7d4 !default;\n// $core-sosh-color-blue-duck-light-880: #4ec1d0 !default;\n// $core-sosh-color-blue-duck-light-960: #3ebbcc !default;\n$core-sosh-color-citrine-50: #f6f5ee !default;\n// $core-sosh-color-citrine-100: #fff6cc !default;\n// $core-sosh-color-citrine-200: #ffec99 !default;\n$core-sosh-color-citrine-300: #ffe366 !default;\n// $core-sosh-color-citrine-400: #ffd92e !default;\n$core-sosh-color-citrine-500: #fbcd00 !default;\n// $core-sosh-color-citrine-600: #c7a200 !default;\n// $core-sosh-color-citrine-700: #997d00 !default;\n// $core-sosh-color-citrine-800: #665300 !default;\n// $core-sosh-color-citrine-900: #332a00 !default;\n$core-sosh-color-citrine-950: #241d00 !default;\n// $core-sosh-color-citrine-1000: #191500 !default;\n// $core-sosh-color-magenta-50: #fce9ee !default;\n// $core-sosh-color-magenta-100: #f8d3dc !default;\n// $core-sosh-color-magenta-200: #f2a6b9 !default;\n$core-sosh-color-magenta-300: #eb7a96 !default;\n// $core-sosh-color-magenta-400: #e55277 !default;\n$core-sosh-color-magenta-500: #d5204e !default; // Test for support Figma\n// $core-sosh-color-magenta-600: #b61b42 !default;\n// $core-sosh-color-magenta-700: #851430 !default;\n$core-sosh-color-magenta-800: #590d20 !default;\n// $core-sosh-color-magenta-900: #2c0710 !default;\n// $core-sosh-color-magenta-950: #160308 !default;\n$core-sosh-color-opacity-magenta: rgba(213, 32, 78, .1) !default; // Test for support Figma\n// scss-docs-end ouds-raw-color\n\n// Dimension\n\n// scss-docs-start ouds-raw-dimension\n$core-ouds-dimension-base: 4px !default;\n$core-ouds-dimension-0: $core-ouds-dimension-base * 0 !default; // 0px\n$core-ouds-dimension-50: $core-ouds-dimension-base * 1 !default; // 4px\n$core-ouds-dimension-100: $core-ouds-dimension-base * 2 !default; // 8px\n$core-ouds-dimension-150: $core-ouds-dimension-base * 3 !default; // 12px\n$core-ouds-dimension-200: $core-ouds-dimension-base * 4 !default; // 16px\n$core-ouds-dimension-250: $core-ouds-dimension-base * 5 !default; // 20px\n$core-ouds-dimension-300: $core-ouds-dimension-base * 6 !default; // 24px\n$core-ouds-dimension-350: $core-ouds-dimension-base * 7 !default; // 28px\n$core-ouds-dimension-400: $core-ouds-dimension-base * 8 !default; // 32px\n$core-ouds-dimension-450: $core-ouds-dimension-base * 9 !default; // 36px\n$core-ouds-dimension-500: $core-ouds-dimension-base * 10 !default; // 40px\n$core-ouds-dimension-550: $core-ouds-dimension-base * 11 !default; // 44px\n$core-ouds-dimension-600: $core-ouds-dimension-base * 12 !default; // 48px\n$core-ouds-dimension-650: $core-ouds-dimension-base * 13 !default; // 52px\n$core-ouds-dimension-700: $core-ouds-dimension-base * 14 !default; // 56px\n$core-ouds-dimension-750: $core-ouds-dimension-base * 15 !default; // 60px\n$core-ouds-dimension-800: $core-ouds-dimension-base * 16 !default; // 64px\n$core-ouds-dimension-850: $core-ouds-dimension-base * 17 !default; // 68px\n$core-ouds-dimension-900: $core-ouds-dimension-base * 18 !default; // 72px\n// $core-ouds-dimension-950: $core-ouds-dimension-base * 19 !default; // 76px\n$core-ouds-dimension-1000: $core-ouds-dimension-base * 20 !default; // 80px\n$core-ouds-dimension-1100: $core-ouds-dimension-base * 22 !default; // 88px\n$core-ouds-dimension-1200: $core-ouds-dimension-base * 24 !default; // 96px\n// $core-ouds-dimension-1250: $core-ouds-dimension-base * 25 !default; // 100px\n$core-ouds-dimension-1400: $core-ouds-dimension-base * 28 !default; // 112px\n$core-ouds-dimension-1600: $core-ouds-dimension-base * 32 !default; // 128px\n$core-ouds-dimension-1800: $core-ouds-dimension-base * 36 !default; // 144px\n$core-ouds-dimension-2000: $core-ouds-dimension-base * 40 !default; // 160px\n$core-ouds-dimension-2225: $core-ouds-dimension-base * 50 !default; // 200px\n$core-ouds-dimension-2500: $core-ouds-dimension-base * 60 !default; // 240px\n$core-ouds-dimension-3000: $core-ouds-dimension-base * 80 !default; // 320px\n$core-ouds-dimension-4000: $core-ouds-dimension-base * 120 !default; // 480px\n// $core-ouds-dimension-5000: $core-ouds-dimension-base * 140 !default; // 560px\n$core-ouds-dimension-6000: $core-ouds-dimension-base * 160 !default; // 640px\n$core-ouds-dimension-7000: $core-ouds-dimension-base * 180 !default; // 720px\n$core-ouds-dimension-9000: $core-ouds-dimension-base * 220 !default; // 880px\n$core-ouds-dimension-11000: $core-ouds-dimension-base * 260 !default; // 1040px\n$core-ouds-dimension-out-of-system-25: $core-ouds-dimension-base * .25 !default; // 1px\n$core-ouds-dimension-out-of-system-50: $core-ouds-dimension-base * .5 !default; // 2px\n$core-ouds-dimension-out-of-system-75: $core-ouds-dimension-base * .75 !default; // 3px\n$core-ouds-dimension-out-of-system-150: $core-ouds-dimension-base * 1.5 !default; // 6px\n$core-ouds-dimension-out-of-system-250: $core-ouds-dimension-base * 2.5 !default; // 10px\n// scss-docs-end ouds-raw-dimension\n\n// Elevation\n\n// scss-docs-start ouds-raw-elevation\n$core-ouds-elevation-blur-0: 0 !default;\n// $core-ouds-elevation-blur-100: 1px !default;\n$core-ouds-elevation-blur-200: 2px !default;\n$core-ouds-elevation-blur-300: 3px !default;\n$core-ouds-elevation-blur-400: 4px !default;\n// $core-ouds-elevation-blur-500: 8px !default;\n$core-ouds-elevation-blur-600: 12px !default;\n// $core-ouds-elevation-blur-700: 20px !default;\n$core-ouds-elevation-spread-0: 0 !default;\n// $core-ouds-elevation-spread-300: 3px !default;\n$core-ouds-elevation-spread-n100: -1px !default;\n// $core-ouds-elevation-spread-n200: -2px !default;\n$core-ouds-elevation-spread-n300: -4px !default;\n// $core-ouds-elevation-spread-n400: -8px !default;\n$core-ouds-elevation-x-0: 0 !default;\n$core-ouds-elevation-y-0: 0 !default;\n$core-ouds-elevation-y-100: 1px !default;\n$core-ouds-elevation-y-200: 2px !default;\n$core-ouds-elevation-y-300: 4px !default;\n// $core-ouds-elevation-y-400: 8px !default;\n$core-ouds-elevation-y-500: 12px !default;\n// $core-ouds-elevation-y-600: 20px !default;\n// scss-docs-end ouds-raw-elevation\n\n// Font\n\n// scss-docs-start ouds-raw-font\n// $core-ouds-font-family-monospace-courier-new: \"Courier New\" !default;\n$core-ouds-font-family-monospace-menlo: \"Menlo\" !default;\n// $core-ouds-font-family-monospace-monaco: \"Monaco\" !default;\n// $core-ouds-font-family-monospace-sf-mono: \"SF Mono\" !default;\n// $core-ouds-font-family-system-arial: \"Arial\" !default;\n// $core-ouds-font-family-system-helvetica: \"Helvetica\" !default;\n// $core-ouds-font-family-system-noto-sans: \"Noto Sans\" !default;\n// $core-ouds-font-family-system-roboto: \"Roboto\" !default;\n// $core-ouds-font-family-system-sf-pro: \"SF Pro\" !default;\n$core-ouds-font-letter-spacing-150: .18px !default;\n// $core-ouds-font-letter-spacing-175: .19px !default;\n$core-ouds-font-letter-spacing-200: .17px !default;\n$core-ouds-font-letter-spacing-250: .2px !default;\n$core-ouds-font-letter-spacing-300: .18px !default;\n$core-ouds-font-letter-spacing-350: 0 !default;\n$core-ouds-font-letter-spacing-450: -.12px !default;\n$core-ouds-font-letter-spacing-550: -.28px !default;\n$core-ouds-font-letter-spacing-650: -.32px !default;\n$core-ouds-font-letter-spacing-750: -.36px !default;\n$core-ouds-font-letter-spacing-850: -.4px !default;\n// $core-ouds-font-letter-spacing-950: -.55px !default;\n$core-ouds-font-letter-spacing-1050: -.6px !default;\n// $core-ouds-font-letter-spacing-1150: -.65px !default;\n$core-ouds-font-letter-spacing-1250: -.7px !default;\n$core-ouds-font-letter-spacing-1450: -.96px !default;\n$core-ouds-font-letter-spacing-1850: -1.08px !default;\n$core-ouds-font-line-height-250: 16px !default;\n$core-ouds-font-line-height-350: 20px !default;\n$core-ouds-font-line-height-450: 24px !default;\n$core-ouds-font-line-height-550: 28px !default;\n$core-ouds-font-line-height-650: 32px !default;\n$core-ouds-font-line-height-750: 36px !default;\n$core-ouds-font-line-height-850: 40px !default;\n$core-ouds-font-line-height-950: 44px !default;\n$core-ouds-font-line-height-1050: 48px !default;\n// $core-ouds-font-line-height-1150: 52px !default;\n$core-ouds-font-line-height-1250: 56px !default;\n// $core-ouds-font-line-height-1350: 60px !default;\n$core-ouds-font-line-height-1450: 64px !default;\n$core-ouds-font-line-height-1850: 72px !default;\n$core-ouds-font-line-height-2050: 80px !default;\n$core-ouds-font-size-150: 12px !default;\n// $core-ouds-font-size-175: 13px !default;\n$core-ouds-font-size-200: 14px !default;\n$core-ouds-font-size-250: 16px !default;\n$core-ouds-font-size-300: 18px !default;\n$core-ouds-font-size-350: 20px !default;\n$core-ouds-font-size-450: 24px !default;\n$core-ouds-font-size-550: 28px !default;\n$core-ouds-font-size-650: 32px !default;\n$core-ouds-font-size-750: 36px !default;\n$core-ouds-font-size-850: 40px !default;\n// $core-ouds-font-size-950: 44px !default;\n$core-ouds-font-size-1050: 48px !default;\n// $core-ouds-font-size-1150: 52px !default;\n$core-ouds-font-size-1250: 56px !default;\n$core-ouds-font-size-1450: 64px !default;\n$core-ouds-font-size-1850: 72px !default;\n// $core-ouds-font-weight-100: 100 !default;\n// $core-ouds-font-weight-200: 200 !default;\n// $core-ouds-font-weight-300: 300 !default;\n$core-ouds-font-weight-400: 400 !default;\n// $core-ouds-font-weight-500: 500 !default;\n// $core-ouds-font-weight-600: 600 !default;\n$core-ouds-font-weight-700: 700 !default;\n// $core-ouds-font-weight-800: 800 !default;\n// $core-ouds-font-weight-900: 900 !default;\n// $core-ouds-font-weight-950: 950 !default;\n$core-sosh-font-family-default: \"Sosh\" !default;\n// scss-docs-end ouds-raw-font\n\n// Grid\n\n// scss-docs-start ouds-raw-grid\n// $core-ouds-grid-column-count-100: 1px !default;\n// $core-ouds-grid-column-count-200: 2px !default;\n$core-ouds-grid-column-count-400: 4px !default;\n$core-ouds-grid-column-count-600: 6px !default;\n// $core-ouds-grid-column-count-800: 8px !default;\n// $core-ouds-grid-column-count-1000: 10px !default;\n$core-ouds-grid-column-count-1200: 12px !default;\n$core-ouds-grid-max-width-100: 389px !default;\n$core-ouds-grid-max-width-200: 479px !default;\n$core-ouds-grid-max-width-300: 735px !default;\n$core-ouds-grid-max-width-400: 1023px !default;\n$core-ouds-grid-max-width-500: 1319px !default;\n$core-ouds-grid-max-width-600: 1639px !default;\n$core-ouds-grid-max-width-650: 1680px !default;\n$core-ouds-grid-max-width-700: 1879px !default;\n// $core-ouds-grid-max-width-800: 1920px !default;\n$core-ouds-grid-min-width-100: 1px !default;\n$core-ouds-grid-min-width-200: 390px !default;\n$core-ouds-grid-min-width-300: 480px !default;\n$core-ouds-grid-min-width-400: 736px !default;\n$core-ouds-grid-min-width-500: 1024px !default;\n$core-ouds-grid-min-width-600: 1320px !default;\n$core-ouds-grid-min-width-700: 1640px !default;\n$core-ouds-grid-min-width-800: 1880px !default;\n$core-ouds-grid-width-100: 360px !default;\n$core-ouds-grid-width-200: 390px !default;\n$core-ouds-grid-width-300: 480px !default;\n$core-ouds-grid-width-400: 768px !default;\n$core-ouds-grid-width-500: 1024px !default;\n$core-ouds-grid-width-600: 1440px !default;\n$core-ouds-grid-width-700: 1680px !default;\n$core-ouds-grid-width-800: 1920px !default;\n// $core-ouds-grid-column-gap-10: $core-ouds-dimension-base * .25 !default; // 1px\n$core-ouds-grid-column-gap-100: $core-ouds-dimension-base * 2 !default; // 8px\n$core-ouds-grid-column-gap-200: $core-ouds-dimension-base * 4 !default; // 16px\n// $core-ouds-grid-column-gap-300: $core-ouds-dimension-base * 5 !default; // 20px\n$core-ouds-grid-column-gap-400: $core-ouds-dimension-base * 6 !default; // 24px\n$core-ouds-grid-column-gap-600: $core-ouds-dimension-base * 8 !default; // 32px\n$core-ouds-grid-column-gap-800: $core-ouds-dimension-base * 10 !default; // 40px\n$core-ouds-grid-margin-100: $core-ouds-dimension-base * 4 !default; // 16px\n$core-ouds-grid-margin-300: $core-ouds-dimension-base * 6 !default; // 24px\n$core-ouds-grid-margin-400: $core-ouds-dimension-base * 7 !default; // 28px\n$core-ouds-grid-margin-500: $core-ouds-dimension-base * 8 !default; // 32px\n// $core-ouds-grid-margin-600: $core-ouds-dimension-base * 9 !default; // 36px\n$core-ouds-grid-margin-700: $core-ouds-dimension-base * 10 !default; // 40px\n// $core-ouds-grid-margin-1000: $core-ouds-dimension-base * 13 !default; // 52px\n$core-ouds-grid-margin-1100: $core-ouds-dimension-base * 14 !default; // 56px\n$core-ouds-grid-margin-1700: $core-ouds-dimension-base * 20 !default; // 80px\n$core-ouds-grid-margin-2500: $core-ouds-dimension-base * 28 !default; // 112px\n// scss-docs-end ouds-raw-grid\n\n// Opacity\n\n// scss-docs-start ouds-raw-opacity\n$core-ouds-opacity-0: 0 !default;\n$core-ouds-opacity-40: .04 !default;\n// $core-ouds-opacity-80: .08 !default;\n// $core-ouds-opacity-120: .12 !default;\n$core-ouds-opacity-160: .16 !default;\n$core-ouds-opacity-200: .2 !default;\n// $core-ouds-opacity-240: .24 !default;\n// $core-ouds-opacity-280: .28 !default;\n$core-ouds-opacity-320: .32 !default;\n// $core-ouds-opacity-360: .36 !default;\n// $core-ouds-opacity-400: .4 !default;\n// $core-ouds-opacity-440: .44 !default;\n// $core-ouds-opacity-480: .48 !default;\n// $core-ouds-opacity-520: .52 !default;\n// $core-ouds-opacity-560: .56 !default;\n// $core-ouds-opacity-600: .6 !default;\n$core-ouds-opacity-640: .64 !default;\n// $core-ouds-opacity-680: .68 !default;\n// $core-ouds-opacity-720: .72 !default;\n// $core-ouds-opacity-760: .76 !default;\n// $core-ouds-opacity-800: .8 !default;\n// $core-ouds-opacity-880: .88 !default;\n// $core-ouds-opacity-920: .92 !default;\n// $core-ouds-opacity-960: .96 !default;\n$core-ouds-opacity-1000: 1 !default;\n// scss-docs-end ouds-raw-opacity\n\n// Version: \"1.1.0\" !default;\n\n// scss-docs-start ouds-raw-version: \"1.1.0\" !default;\n// $core-sosh-version: \"1.1.0\" !default;\n// scss-docs-end ouds-raw-version: \"1.1.0\" !default;\n","// Row\n//\n// Rows contain your columns.\n\n#{$ouds-root-selector} { // OUDS mod: instead of `:root`\n  @each $name, $value in $grid-breakpoints {\n    --#{$prefix}breakpoint-#{$name}: #{$value};\n  }\n}\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  // OUDS mod: `--#{$prefix}gutter-x` is handled below\n  --#{$prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n\n  // OUDS mod: gutter depends on breakpoints\n  @each $breakpoint, $gutter2 in $grid-gutter-widths {\n    @include media-breakpoint-up($breakpoint) {\n      --#{$prefix}gutter-x: #{$gutter2};\n    }\n  }\n  // End mod\n}\n\n@mixin make-col-ready() {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// number of columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: percentage(divide(1, $count));\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0;\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$prefix}gutter-x: #{$value if($enable-important-utilities, !important, null)}; // OUDS mod: `$enable-important-utilities` check is added\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$prefix}gutter-y: #{$value if($enable-important-utilities, !important, null)}; // OUDS mod: `$enable-important-utilities` check is added\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is an invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","// Utility generator\n// Used to generate utilities & print utilities\n@mixin generate-utility($utility, $infix: \"\", $is-rfs-media-query: false) {\n  $values: map-get($utility, values);\n  $bootstrap-compatibility: map-get($utility, bootstrap-compatibility); // OUDS mod\n\n  @if ($bootstrap-compatibility != true or $enable-bootstrap-compatibility == true) { // OUDS mod\n    // If the values are a list or string, convert it into a map\n    @if type-of($values) == \"string\" or type-of(nth($values, 1)) != \"list\" {\n      $values: zip($values, $values);\n    }\n\n    @each $key, $value in $values {\n      $properties: map-get($utility, property);\n\n      // Multiple properties are possible, for example with vertical or horizontal margins or paddings\n      @if type-of($properties) == \"string\" {\n        $properties: append((), $properties);\n      }\n\n      // Use custom class if present\n      $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n      $property-class: if($property-class == null, \"\", $property-class);\n\n      // Use custom CSS variable name if present, otherwise default to `class`\n      $css-variable-name: if(map-has-key($utility, css-variable-name), map-get($utility, css-variable-name), map-get($utility, class));\n\n      // State params to generate pseudo-classes\n      $state: if(map-has-key($utility, state), map-get($utility, state), ());\n\n      $infix: if($property-class == \"\" and str-slice($infix, 1, 1) == \"-\", str-slice($infix, 2), $infix);\n\n      // Don't prefix if value key is null (e.g. with shadow class)\n      $property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n\n      @if map-get($utility, rfs) {\n        // Inside the media query\n        @if $is-rfs-media-query {\n          $val: rfs-value($value);\n\n          // Do not render anything if fluid and non fluid values are the same\n          $value: if($val == rfs-fluid-value($value), null, $val);\n        }\n        @else {\n          $value: rfs-fluid-value($value);\n        }\n      }\n\n      $is-css-var: map-get($utility, css-var);\n      $is-local-vars: map-get($utility, local-vars);\n      $is-rtl: map-get($utility, rtl);\n\n      @if $value != null {\n        @if $is-rtl == false {\n          /* rtl:begin:remove */\n        }\n\n        // OUDS mod\n        @if type-of($value) == \"string\" and str-slice($value, 1, 1) == \"/\" {\n          .#{$property-class + $infix + $property-class-modifier} {\n            @include get-font-size(#{str-slice($value, 2)});\n          }\n          // End mod\n        } @else {\n          @if $is-css-var {\n            .#{$property-class + $infix + $property-class-modifier} {\n              --#{$prefix}#{$css-variable-name}: #{$value};\n            }\n\n            @each $pseudo in $state {\n              .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n                --#{$prefix}#{$css-variable-name}: #{$value};\n              }\n            }\n          } @else {\n            .#{$property-class + $infix + $property-class-modifier} {\n              @each $property in $properties {\n                @if $is-local-vars {\n                  @each $local-var, $variable in $is-local-vars {\n                    --#{$prefix}#{$local-var}: #{$variable};\n                  }\n                }\n                #{$property}: $value if($enable-important-utilities, !important, null);\n              }\n            }\n\n            @each $pseudo in $state {\n              .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n                @each $property in $properties {\n                  @if $is-local-vars {\n                    @each $local-var, $variable in $is-local-vars {\n                      --#{$prefix}#{$local-var}: #{$variable};\n                    }\n                  }\n                  #{$property}: $value if($enable-important-utilities, !important, null);\n                }\n              }\n            }\n          }\n\n          @if $is-rtl == false {\n            /* rtl:end:remove */\n          }\n        }\n      }\n    }\n  }\n}\n","// Loop over each breakpoint\n@each $breakpoint in map-keys($grid-breakpoints) {\n\n  // Generate media query if needed\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    // Loop over each utility property\n    @each $key, $utility in $utilities {\n      // The utility can be disabled with `false`, thus check if the utility is a map first\n      // Only proceed if responsive media queries are enabled or if it's the base media query\n      @if type-of($utility) == \"map\" and (map-get($utility, responsive) or $infix == \"\") {\n        @include generate-utility($utility, $infix);\n      }\n    }\n  }\n}\n\n// RFS rescaling\n@media (min-width: $rfs-mq-value) {\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {\n      // Loop over each utility property\n      @each $key, $utility in $utilities {\n        // The utility can be disabled with `false`, thus check if the utility is a map first\n        // Only proceed if responsive media queries are enabled or if it's the base media query\n        @if type-of($utility) == \"map\" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == \"\") {\n          @include generate-utility($utility, $infix, true);\n        }\n      }\n    }\n  }\n}\n\n\n// Print utilities\n@media print {\n  @each $key, $utility in $utilities {\n    // The utility can be disabled with `false`, thus check if the utility is a map first\n    // Then check if the utility needs print styles\n    @if type-of($utility) == \"map\" and map-get($utility, print) == true {\n      @include generate-utility($utility, \"-print\");\n    }\n  }\n}\n"]}